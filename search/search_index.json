{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to my home on the internet!!! I\u2019ve marked down my grinding journey as a software developer, inspired by the idea of The Ph.D. Grind: A Ph.D. Student Memoir Software engineers normally read more, grind more technologies and then use less and elegant code in work. The software engineer journey is a pursuit of craftsmanship spirit. Happy coding! Happy life!","title":"Home"},{"location":"blog/","text":"Blog \u2693\ufe0e","title":"Blog"},{"location":"blog/#blog","text":"","title":"Blog"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/","text":"Data & Visual Analytics Fun Materials for the week: \u2693\ufe0e How to create an intuitive statistical visualization? \u2693\ufe0e Hans Rosling had mastered that art and we can learn a lot from his first TED talk . Data Visualization \u2693\ufe0e Edward Tufte is a pioneer in Data Visualization and he is also a fellow of the American Statistical Association. His books on visualization are amongst the best 100 books of the 20 th century on Amazon. The \u201c Thinking Eye with Edward Tufte \u201d ( link ) is a lecture given by Edward Tufte at MIT Sloan Sports Analytics Conference is a great place to learn about \u201cEdward Tufte\u2019s Design Principles\u201d Information is beautiful is one of the best places to learn how to create impactful infographics and data visuals. The website was founded by David McCandless who is one of the brightest minds in data visualization. He has tons of great examples on his website. He also conducts Dataviz Workshops in major cities around the world and you can check his workshop schedule here (including online seminars). August 2020 edition of Wired magazine had a brilliant article on data visualization aptly titled, Is Your Chart a Detective Story? Or a Police Report? . Here\u2019s a small abstract from the article: Consider the visualization created by information designer Will Burtin in 1951 to summarize the effectiveness of three antibiotics\u2014penicillin, neomycin, and streptomycin\u2014in treating 13 bacteria. Bacterial species are arrayed in a circular layout, with three bars for each bacterial infection representing the amount of each antibiotic needed to treat it. An inversion of the scale means that longer bars represent more effective antibiotics, aligning with a spontaneous interpretation of bigger is better, while shading behind the bars neatly organizes the bacteria into two groups according to whether they result in a positive or negative gram stain test. This article is a great place to understand the pros and cons of creative non-traditional visualizations. \u201cSimplicity is the ultimate sophistication.\u201d This design mantra of Steve Jobs and Jonny Ive changed our world and technology forever. Jony Ive\u2019s biography Jony Ive: The Genius Behind Apple\u2019s Greatest Products has some wonderful lessons one can learn on creating a simple and intuitive design for complex problems. Here\u2019s is a small excerpt from this book: The process of simplification is design 101, a mind-set that every design student is taught in school. But not every student adopts it, and it\u2019s rarely applied with the ruthless discipline practiced by Jony. Indeed, if there\u2019s such a thing as a single secret to what Jony Ive does, it is to follow slavishly the simplification philosophy. That approach has accounted for many of the major breakthroughs, as well as for some products that failed and others that Apple hasn\u2019t released. Caring enough to commit the enormous time and effort to get something right has also been Jony\u2019s hallmark, from his earliest college projects onward. Jony\u2019s ultimate goal is for his designs to disappear. *\u201dCorrelation does not imply causation\u201d* . The deciphering \u201ccausation\u201d has been an open question for decades if not centuries. Judea Pearl is not only described as one of the giants in the field of artificial intelligence but also considered as one of the founding fathers of the causal revolution. His 2018 book, The Book of Why: The New Science of Cause and Effect has rekindled the interest in causal research. Here\u2019s an excerpt from his book: Ironically, the need for a theory of causation began to surface at the same time that statistics came into being. In fact, modern statistics hatched from the causal questions that Galton and Pearson asked about heredity and their ingenious attempts to answer them using cross-generational data. Unfortunately, they failed in this endeavor, and rather than pause to ask why, they declared those questions off-limits and turned to developing a thriving, causality-free enterprise called statistics. [\u2014] My emphasis on language also comes from a deep conviction that language shapes our thoughts. You cannot answer questions that you cannot ask, and you cannot ask a question that you have no words for. His new book has inspired many people and there are some wonderful python packages now on causality including Microsoft\u2019s Python package aptly titled - Do Why . Python \u2693\ufe0e Python is the most popular and easy to use language in data science. This week, we recommend a book that will help not only beginners but also advanced Python programmers to revisit some of the hidden gems and good etiquette of Python programming. - Fluent Python: Clear, Concise, and Effective Programming by Luciano Ramalho ( link ) - Interview with Python creator Guido van Rossum on how Python makes thinking in code easier ( link ) Richard Feynman \u2693\ufe0e Richard Feynman has often considered as the greatest teacher ever. He not only mastered physics but had mastered the art of thinking correctly. His famous lines to NASA managers testified in front of the Rogers Commission that was investigating the Space Shuttle Challenger disaster, \u201cWhen you don\u2019t have data, you have to use reason. And they were giving you reasons.\u201d is an important insight for data scientists to dive deep into the problem to find a resolution even with limited data. This BBC documentary on his life, The Pleasure of Finding Things Out is a never-ending oasis of inspiration. His famous talk on \u201c Beauty \u201d is part of this documentary. His last book The Meaning of It All: Thoughts of a Citizen-Scientist is a great consolidation of his lectures and insights. Thanks to Bill Gates, who bought all the rights to Richard Feynman Caltech lectures and made it available free online under the name Project Tuva . Traveling Salesman problem \u2693\ufe0e Last week, after 44 years computer scientists found a better way to come up with an approximate solution to the Traveling Salesman problem. You can read about it here . Traveling Salesman problem is an NP-hard problem and you can read about it here . There is a wonderful movie from 2012 aptly titled \u201cTraveling Salesman\u201d which depicts hours and days after three mathematicians solve this hardest problem in computer science, P=NP. The movie is available for free on Prime and YouTube . Enjoy the movie! Bayes Algorithm \u2693\ufe0e Bayes Algorithm has stood the test of time for centuries. Sharon Bertsch McGrayne\u2019s fascinating book The Theory That Would Not Die: How Bayes\u2019 Rule Cracked the Enigma Code, Hunted Down Russian Submarines, & Emerged Triumphant from Two Centuries of Controversy not only covers the history but also the immense practical applications of Bayes. To complement this book, the movie Imitation Games is a brilliant portrayal of how Alan Turing cracked the Enigma code using Bayes to eventually helped defeat the Nazis. If you are ready to start using Bayes, Allen Dowing\u2019s Think Bayes is a great place to start and it is Python-based. Machine Learning \u2693\ufe0e This week all of you have started Machine Learning based homework and with long term career planning in ML, these are three practical and \u201ccode\u201d based ML books (with limited theory): Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow 2 by Sebastian Raschka & Vahid Mirjalili Approaching (Almost) Any Machine Learning Problem by Abhishek Thakur The 100 Page Machine Learning Book by Andriy Burkov covers everything in just 100 pages. For a quick review of ML theory, Chris Albon\u2019s Machine Learning Flashcards are excellent. Oscar Nominee Werner Herzog\u2019s documentary Lo and Behold, Reveries of the Connected World (also starring Sebastian Thrun) is a wonderful watch to learn about the past, present, and future of the internet. Young Scientist \u2693\ufe0e E.O. Wilson\u2019s Letters to Young Scientist is an insightful read for all ages but it is an important read for students. Here\u2019s a small excerpt from the book where the living legend of biology draws an analogy between a scientist and an artist : The ideal scientist thinks like a poet and only later works like a bookkeeper. Keep in mind that innovators in both literature and science are basically dreamers and storytellers. In the early stages of the creation of both literature and science, everything in the mind is a story. There is an imagined ending, and usually an imagined beginning, and a selection of bits and pieces that might fit in between. In works of literature and science alike, any part can be changed, causing a ripple among the other parts, some of which are discarded and new ones added. The surviving fragments are variously joined and separated and moved about as the story forms. One scenario emerges, then another. The scenarios, whether literary or scientific in nature, compete with one another. Some overlap. Words and sentences (or equations or experiments) are tried to make sense of the whole thing. Early on, an end to all the imagining is conceived. It arrives at a wondrous denouement (or scientific breakthrough). But is it the best, is it true? To bring the end safely home is the goal of the creative mind. *** *** E.O.Wilson also has a TED on the same subject, Advice to a young scientist .","title":"Data Visual Analytics"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#fun-materials-for-the-week","text":"","title":"Fun Materials for the week:"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#how-to-create-an-intuitive-statistical-visualization","text":"Hans Rosling had mastered that art and we can learn a lot from his first TED talk .","title":"How to create an intuitive statistical visualization?"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#data-visualization","text":"Edward Tufte is a pioneer in Data Visualization and he is also a fellow of the American Statistical Association. His books on visualization are amongst the best 100 books of the 20 th century on Amazon. The \u201c Thinking Eye with Edward Tufte \u201d ( link ) is a lecture given by Edward Tufte at MIT Sloan Sports Analytics Conference is a great place to learn about \u201cEdward Tufte\u2019s Design Principles\u201d Information is beautiful is one of the best places to learn how to create impactful infographics and data visuals. The website was founded by David McCandless who is one of the brightest minds in data visualization. He has tons of great examples on his website. He also conducts Dataviz Workshops in major cities around the world and you can check his workshop schedule here (including online seminars). August 2020 edition of Wired magazine had a brilliant article on data visualization aptly titled, Is Your Chart a Detective Story? Or a Police Report? . Here\u2019s a small abstract from the article: Consider the visualization created by information designer Will Burtin in 1951 to summarize the effectiveness of three antibiotics\u2014penicillin, neomycin, and streptomycin\u2014in treating 13 bacteria. Bacterial species are arrayed in a circular layout, with three bars for each bacterial infection representing the amount of each antibiotic needed to treat it. An inversion of the scale means that longer bars represent more effective antibiotics, aligning with a spontaneous interpretation of bigger is better, while shading behind the bars neatly organizes the bacteria into two groups according to whether they result in a positive or negative gram stain test. This article is a great place to understand the pros and cons of creative non-traditional visualizations. \u201cSimplicity is the ultimate sophistication.\u201d This design mantra of Steve Jobs and Jonny Ive changed our world and technology forever. Jony Ive\u2019s biography Jony Ive: The Genius Behind Apple\u2019s Greatest Products has some wonderful lessons one can learn on creating a simple and intuitive design for complex problems. Here\u2019s is a small excerpt from this book: The process of simplification is design 101, a mind-set that every design student is taught in school. But not every student adopts it, and it\u2019s rarely applied with the ruthless discipline practiced by Jony. Indeed, if there\u2019s such a thing as a single secret to what Jony Ive does, it is to follow slavishly the simplification philosophy. That approach has accounted for many of the major breakthroughs, as well as for some products that failed and others that Apple hasn\u2019t released. Caring enough to commit the enormous time and effort to get something right has also been Jony\u2019s hallmark, from his earliest college projects onward. Jony\u2019s ultimate goal is for his designs to disappear. *\u201dCorrelation does not imply causation\u201d* . The deciphering \u201ccausation\u201d has been an open question for decades if not centuries. Judea Pearl is not only described as one of the giants in the field of artificial intelligence but also considered as one of the founding fathers of the causal revolution. His 2018 book, The Book of Why: The New Science of Cause and Effect has rekindled the interest in causal research. Here\u2019s an excerpt from his book: Ironically, the need for a theory of causation began to surface at the same time that statistics came into being. In fact, modern statistics hatched from the causal questions that Galton and Pearson asked about heredity and their ingenious attempts to answer them using cross-generational data. Unfortunately, they failed in this endeavor, and rather than pause to ask why, they declared those questions off-limits and turned to developing a thriving, causality-free enterprise called statistics. [\u2014] My emphasis on language also comes from a deep conviction that language shapes our thoughts. You cannot answer questions that you cannot ask, and you cannot ask a question that you have no words for. His new book has inspired many people and there are some wonderful python packages now on causality including Microsoft\u2019s Python package aptly titled - Do Why .","title":"Data Visualization"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#python","text":"Python is the most popular and easy to use language in data science. This week, we recommend a book that will help not only beginners but also advanced Python programmers to revisit some of the hidden gems and good etiquette of Python programming. - Fluent Python: Clear, Concise, and Effective Programming by Luciano Ramalho ( link ) - Interview with Python creator Guido van Rossum on how Python makes thinking in code easier ( link )","title":"Python"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#richard-feynman","text":"Richard Feynman has often considered as the greatest teacher ever. He not only mastered physics but had mastered the art of thinking correctly. His famous lines to NASA managers testified in front of the Rogers Commission that was investigating the Space Shuttle Challenger disaster, \u201cWhen you don\u2019t have data, you have to use reason. And they were giving you reasons.\u201d is an important insight for data scientists to dive deep into the problem to find a resolution even with limited data. This BBC documentary on his life, The Pleasure of Finding Things Out is a never-ending oasis of inspiration. His famous talk on \u201c Beauty \u201d is part of this documentary. His last book The Meaning of It All: Thoughts of a Citizen-Scientist is a great consolidation of his lectures and insights. Thanks to Bill Gates, who bought all the rights to Richard Feynman Caltech lectures and made it available free online under the name Project Tuva .","title":"Richard Feynman"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#traveling-salesman-problem","text":"Last week, after 44 years computer scientists found a better way to come up with an approximate solution to the Traveling Salesman problem. You can read about it here . Traveling Salesman problem is an NP-hard problem and you can read about it here . There is a wonderful movie from 2012 aptly titled \u201cTraveling Salesman\u201d which depicts hours and days after three mathematicians solve this hardest problem in computer science, P=NP. The movie is available for free on Prime and YouTube . Enjoy the movie!","title":"Traveling Salesman problem"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#bayes-algorithm","text":"Bayes Algorithm has stood the test of time for centuries. Sharon Bertsch McGrayne\u2019s fascinating book The Theory That Would Not Die: How Bayes\u2019 Rule Cracked the Enigma Code, Hunted Down Russian Submarines, & Emerged Triumphant from Two Centuries of Controversy not only covers the history but also the immense practical applications of Bayes. To complement this book, the movie Imitation Games is a brilliant portrayal of how Alan Turing cracked the Enigma code using Bayes to eventually helped defeat the Nazis. If you are ready to start using Bayes, Allen Dowing\u2019s Think Bayes is a great place to start and it is Python-based.","title":"Bayes Algorithm"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#machine-learning","text":"This week all of you have started Machine Learning based homework and with long term career planning in ML, these are three practical and \u201ccode\u201d based ML books (with limited theory): Python Machine Learning: Machine Learning and Deep Learning with Python, scikit-learn, and TensorFlow 2 by Sebastian Raschka & Vahid Mirjalili Approaching (Almost) Any Machine Learning Problem by Abhishek Thakur The 100 Page Machine Learning Book by Andriy Burkov covers everything in just 100 pages. For a quick review of ML theory, Chris Albon\u2019s Machine Learning Flashcards are excellent. Oscar Nominee Werner Herzog\u2019s documentary Lo and Behold, Reveries of the Connected World (also starring Sebastian Thrun) is a wonderful watch to learn about the past, present, and future of the internet.","title":"Machine Learning"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/Data%20Visualization%20Analytics/#young-scientist","text":"E.O. Wilson\u2019s Letters to Young Scientist is an insightful read for all ages but it is an important read for students. Here\u2019s a small excerpt from the book where the living legend of biology draws an analogy between a scientist and an artist : The ideal scientist thinks like a poet and only later works like a bookkeeper. Keep in mind that innovators in both literature and science are basically dreamers and storytellers. In the early stages of the creation of both literature and science, everything in the mind is a story. There is an imagined ending, and usually an imagined beginning, and a selection of bits and pieces that might fit in between. In works of literature and science alike, any part can be changed, causing a ripple among the other parts, some of which are discarded and new ones added. The surviving fragments are variously joined and separated and moved about as the story forms. One scenario emerges, then another. The scenarios, whether literary or scientific in nature, compete with one another. Some overlap. Words and sentences (or equations or experiments) are tried to make sense of the whole thing. Early on, an end to all the imagining is conceived. It arrives at a wondrous denouement (or scientific breakthrough). But is it the best, is it true? To bring the end safely home is the goal of the creative mind. *** *** E.O.Wilson also has a TED on the same subject, Advice to a young scientist .","title":"Young Scientist"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/","text":"Javascript Resources \u2693\ufe0e Javascript Tutorials and Exercises: https://www.codecademy.com/ Online book on Javascript: https://eloquentjavascript.net/ Book on Javascript: http://a.co/d/cOg97Dn D3 Books \u2693\ufe0e Online book to review D3 v3 Tips and Tricks: https://leanpub.com/D3-Tips-and-Tricks/read Online book focusing on D3 v4 features: http://d3indepth.com/ D3 Example Graphs \u2693\ufe0e Pinning nodes: Sticky Force Layout Creating Triangle Plot Symbols: D3 Symbols Creating a Heatmap: Day-Hour Heatmap Converting Wide and Long Data: Wide vs. Long data Customizing Text Alignment: d3 svg text alignment v3 Handling Interactivity: Mouse Events Creating Line Graphs: Simple line graph Making a map: Let\u2019s Make a Map Using a slider: D3 simple slider General \u2693\ufe0e A variety of video tutorials on D3 and Javascript, some designed for learners less familiar with javascript, HTML, and CSS: http://lynda.gatech.edu/ Explanation of D3 Selection: https://bost.ocks.org/mike/selection/ https://bost.ocks.org/mike/join/ https://github.com/d3/d3-selection#selecting-elements D3 Tutorial \u2693\ufe0e D3 Workshop Series: http://duspviz.mit.edu/d3-workshop/intro-to-d3/ Scatter plot Tutorial: http://alignedleft.com/tutorials/d3/making-a-scatterplot D3 and Javascript \u2693\ufe0e CSS Page Break: https://stackoverflow.com/questions/1664049/can-i-force-a-page-jump-in-html-printing/1664058 D3 Heatmap: http://bl.ocks.org/mbostock/3202354 D3 Scatter plot: http://alignedleft.com/tutorials/d3/making-a-scatterplot D3 Select Box: http://bl.ocks.org/jfreels/6734823 D3 Colors: http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3 D3 Map: https://bl.ocks.org/mbostock/4060606 https://webdva.github.io/how-to-draw-a-line-in-d3js/ http://datawanderings.com/2019/10/28/tutorial-making-a-line-chart-in-d3-js-v-5/ Tableau \u2693\ufe0e Tableau open learning lab (online from GaTech) https://library.gatech.edu/events/tableau-open-learning-lab-online-2 Tableau Conference-ish ( link ) Free! Bar Chart vs Stacked Bar Chart Article: https://www.smashingmagazine.com/2017/03/understanding-stacked-bar-charts/","title":"DVA-Resource"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#javascript-resources","text":"Javascript Tutorials and Exercises: https://www.codecademy.com/ Online book on Javascript: https://eloquentjavascript.net/ Book on Javascript: http://a.co/d/cOg97Dn","title":"Javascript Resources"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#d3-books","text":"Online book to review D3 v3 Tips and Tricks: https://leanpub.com/D3-Tips-and-Tricks/read Online book focusing on D3 v4 features: http://d3indepth.com/","title":"D3 Books"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#d3-example-graphs","text":"Pinning nodes: Sticky Force Layout Creating Triangle Plot Symbols: D3 Symbols Creating a Heatmap: Day-Hour Heatmap Converting Wide and Long Data: Wide vs. Long data Customizing Text Alignment: d3 svg text alignment v3 Handling Interactivity: Mouse Events Creating Line Graphs: Simple line graph Making a map: Let\u2019s Make a Map Using a slider: D3 simple slider","title":"D3 Example Graphs"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#general","text":"A variety of video tutorials on D3 and Javascript, some designed for learners less familiar with javascript, HTML, and CSS: http://lynda.gatech.edu/ Explanation of D3 Selection: https://bost.ocks.org/mike/selection/ https://bost.ocks.org/mike/join/ https://github.com/d3/d3-selection#selecting-elements","title":"General"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#d3-tutorial","text":"D3 Workshop Series: http://duspviz.mit.edu/d3-workshop/intro-to-d3/ Scatter plot Tutorial: http://alignedleft.com/tutorials/d3/making-a-scatterplot","title":"D3 Tutorial"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#d3-and-javascript","text":"CSS Page Break: https://stackoverflow.com/questions/1664049/can-i-force-a-page-jump-in-html-printing/1664058 D3 Heatmap: http://bl.ocks.org/mbostock/3202354 D3 Scatter plot: http://alignedleft.com/tutorials/d3/making-a-scatterplot D3 Select Box: http://bl.ocks.org/jfreels/6734823 D3 Colors: http://colorbrewer2.org/#type=sequential&scheme=BuGn&n=3 D3 Map: https://bl.ocks.org/mbostock/4060606 https://webdva.github.io/how-to-draw-a-line-in-d3js/ http://datawanderings.com/2019/10/28/tutorial-making-a-line-chart-in-d3-js-v-5/","title":"D3 and Javascript"},{"location":"blog/CS-Graduates/Data_Visual_Analytics/resources/#tableau","text":"Tableau open learning lab (online from GaTech) https://library.gatech.edu/events/tableau-open-learning-lab-online-2 Tableau Conference-ish ( link ) Free! Bar Chart vs Stacked Bar Chart Article: https://www.smashingmagazine.com/2017/03/understanding-stacked-bar-charts/","title":"Tableau"},{"location":"blog/CS-Graduates/machine_learning/","text":"Machine Learning algorithm \u2693\ufe0e Azure Machine Learning Algorithm Cheat Sheet Amazon Machine Learning Google Machine Learning Crash Course Google AI Education Supervised Learning \u2693\ufe0e The data points contain X and labeled Y. The goal is to study many examples and make prediction. discrete value called classification problem continuos value - regression problem e.g. Decision Trees Linear regression Bag Bootstrap Aggregating \u2693\ufe0e Bootstrap aggregating Boosting and AdaBoost clearly explained Unsupervised learning \u2693\ufe0e The goal is to organize the data or to describe its structure. Group data into clusters, K-Means find ways to look at the complex data so that it appears simpler. Reinforcement learning \u2693\ufe0e The goal is to choose an action in response to each data point. (e.g. robotics or IoT: sensor data/signals to strategy for next action.) Q-Learning Reinforcement Q-Learning from Scratch in Python with OpenAI Gym Simple Reinforcement Learning: Q-learning Reinforcement Learning Coach - Intel AI OpenAI Baselines How to evaluate ML Algorithms \u2693\ufe0e Metrics to Evaluate your Machine Learning Algorithm Metrics To Evaluate Machine Learning Algorithms in Python Libraries \u2693\ufe0e scikit-learn \u2693\ufe0e Scientific computing Simple and beginner fridenly only supervised and unsupervised learning. No Deep learning and reinforcement learning algorithm support TensorFlow - Google \u2693\ufe0e ecosystem case study tensorlayer - Reinforcement Learning Library for Scientists and Engineers Tensorforce: a TensorFlow library for applied reinforcement learning - Google Keras \u2693\ufe0e Support Tensorflow and Theano backend Deep Learning, Neural Networks Deep Reinforcement Learning for Keras PyTorch - Facebook \u2693\ufe0e A replacement for NumPy to use the power of GPUs and other accelerators. An automatic differentiation library that is useful to implement neural networks. pytorch-examples Ray - Fast and Simple Distributed Computing - UC Berkeley RISELab \u2693\ufe0e More Learning and practices \u2693\ufe0e The Best Tools for Reinforcement Learning in Python You Actually Want to Try kaggle competition Learn-Data-Sci Data Science Blogs Simple Reinforcement learning tutorials, \u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66 Learning RL \u2693\ufe0e Learning Reinforcement Learning (with Code, Exercises and Solutions) Reinforcement Learning: An Introduction (2 nd Edition) reinforcement-learning Github most star reinforcement-learning-an-introduction","title":"Machine learning"},{"location":"blog/CS-Graduates/machine_learning/#machine-learning-algorithm","text":"Azure Machine Learning Algorithm Cheat Sheet Amazon Machine Learning Google Machine Learning Crash Course Google AI Education","title":"Machine Learning algorithm"},{"location":"blog/CS-Graduates/machine_learning/#supervised-learning","text":"The data points contain X and labeled Y. The goal is to study many examples and make prediction. discrete value called classification problem continuos value - regression problem e.g. Decision Trees Linear regression Bag","title":"Supervised Learning"},{"location":"blog/CS-Graduates/machine_learning/#bootstrap-aggregating","text":"Bootstrap aggregating Boosting and AdaBoost clearly explained","title":"Bootstrap Aggregating"},{"location":"blog/CS-Graduates/machine_learning/#unsupervised-learning","text":"The goal is to organize the data or to describe its structure. Group data into clusters, K-Means find ways to look at the complex data so that it appears simpler.","title":"Unsupervised learning"},{"location":"blog/CS-Graduates/machine_learning/#reinforcement-learning","text":"The goal is to choose an action in response to each data point. (e.g. robotics or IoT: sensor data/signals to strategy for next action.) Q-Learning Reinforcement Q-Learning from Scratch in Python with OpenAI Gym Simple Reinforcement Learning: Q-learning Reinforcement Learning Coach - Intel AI OpenAI Baselines","title":"Reinforcement learning"},{"location":"blog/CS-Graduates/machine_learning/#how-to-evaluate-ml-algorithms","text":"Metrics to Evaluate your Machine Learning Algorithm Metrics To Evaluate Machine Learning Algorithms in Python","title":"How to evaluate ML Algorithms"},{"location":"blog/CS-Graduates/machine_learning/#libraries","text":"","title":"Libraries"},{"location":"blog/CS-Graduates/machine_learning/#scikit-learn","text":"Scientific computing Simple and beginner fridenly only supervised and unsupervised learning. No Deep learning and reinforcement learning algorithm support","title":"scikit-learn"},{"location":"blog/CS-Graduates/machine_learning/#tensorflow---google","text":"ecosystem case study tensorlayer - Reinforcement Learning Library for Scientists and Engineers Tensorforce: a TensorFlow library for applied reinforcement learning - Google","title":"TensorFlow - Google"},{"location":"blog/CS-Graduates/machine_learning/#keras","text":"Support Tensorflow and Theano backend Deep Learning, Neural Networks Deep Reinforcement Learning for Keras","title":"Keras"},{"location":"blog/CS-Graduates/machine_learning/#pytorch---facebook","text":"A replacement for NumPy to use the power of GPUs and other accelerators. An automatic differentiation library that is useful to implement neural networks. pytorch-examples","title":"PyTorch - Facebook"},{"location":"blog/CS-Graduates/machine_learning/#ray---fast-and-simple-distributed-computing---uc-berkeley-riselab","text":"","title":"Ray - Fast and Simple Distributed Computing - UC Berkeley RISELab"},{"location":"blog/CS-Graduates/machine_learning/#more-learning-and-practices","text":"The Best Tools for Reinforcement Learning in Python You Actually Want to Try kaggle competition Learn-Data-Sci Data Science Blogs Simple Reinforcement learning tutorials, \u83ab\u70e6Python \u4e2d\u6587AI\u6559\u5b66","title":"More Learning and practices"},{"location":"blog/CS-Graduates/machine_learning/#learning-rl","text":"Learning Reinforcement Learning (with Code, Exercises and Solutions) Reinforcement Learning: An Introduction (2 nd Edition) reinforcement-learning Github most star reinforcement-learning-an-introduction","title":"Learning RL"},{"location":"blog/CS-Graduates/machine_learning/deep-learning/","text":"In an interview last week, AI pioneer Geoff Hinton said - \u201cDeep learning is going to be able to do everything\u201d And if we have those breakthroughs, will we be able to approximate all human intelligence through deep learning? Yes. Particularly breakthroughs to do with how you get big vectors of neural activity to implement things like reason. But we also need a massive increase in scale. The human brain has about 100 trillion parameters or synapses. What we now call a really big model, like GPT-3, has 175 billion. It\u2019s a thousand times smaller than the brain. GPT-3 can now generate pretty plausible-looking text, and it\u2019s still tiny compared to the brain. When you say the scale, do you mean bigger neural networks, more data, or both? Both. There\u2019s a sort of discrepancy between what happens in computer science and what happens with people. People have a huge amount of parameters compared with the amount of data they\u2019re getting. Neural nets are surprisingly good at dealing with a rather small amount of data, with a huge number of parameters, but people are even better. Deep learning has come a long way in the past few years and changed a lot of minds including Geoff Hilton\u2019s. Here are some good resources to get started on Deep Learning: 1. Deep Learning by Ian Goodfellow, Yoshua Bengio, and Aaron Courville - This book by the founding fathers of deep learning will help cover all the theoretical elements and have a solid understanding of the fundamentals. 2. Deep Learning for Coders with Fastai and PyTorch: AI Applications Without a PhD by Jeremy Howard and Sylvain Gugger - This is a very practical book with lots of code samples. 3. Deep Learning with Python by Fran\u00e7ois Chollet - This is another practical book with tons of code samples.","title":"DL"},{"location":"blog/CS-Graduates/machine_learning/ml4trading/","text":"Machine Learning for Trading \u2693\ufe0e 7646 ML4T Book References \u2693\ufe0e machine-learning-for-trading What Hedge Funds Really Do by Romero and Balch Machine Learning, Tom Mitchell","title":"ML4T"},{"location":"blog/CS-Graduates/machine_learning/ml4trading/#machine-learning-for-trading","text":"7646 ML4T","title":"Machine Learning for Trading"},{"location":"blog/CS-Graduates/machine_learning/ml4trading/#book-references","text":"machine-learning-for-trading What Hedge Funds Really Do by Romero and Balch Machine Learning, Tom Mitchell","title":"Book References"},{"location":"blog/CS-Graduates/machine_learning/RL/","text":"Definition \u2693\ufe0e A problem: The goal is to choose an action in response to each data point. RL Robot Robot: Sense Think Act cycle. What\u2019s the process? \u2693\ufe0e Environment \u2693\ufe0e Action -> Transition function -> State of Env Agent/Robot \u2693\ufe0e State -> Policy: \\(\\Pi(s)\\) -> Collect Rewards, Action The goal \u2693\ufe0e How to find \\(\\Pi\\) to maximize ? Trading Analog \u2693\ufe0e Environment = Market Action = Buy/Sell State = Factors of stocks, e.g. P/E, Rollinger Band Value, etc. Rewards = money returns Policy: \\(\\Pi\\) = Trading strategy Algorithm type \u2693\ufe0e Model-Based \u2693\ufe0e Use the transition T or the rewards R in the model. Model Free \u2693\ufe0e It does not know or use the models of the transitions T or the rewards R. Reference \u2693\ufe0e Reinforcement Learning: A Survey Or Reinforcement Learning: A Survey-PDF Section 8.2 - Reinforcement Learning: An Introduction Section 9 - Reinforcement Learning: An Introduction PPT","title":"RL"},{"location":"blog/CS-Graduates/machine_learning/RL/#definition","text":"A problem: The goal is to choose an action in response to each data point. RL Robot Robot: Sense Think Act cycle.","title":"Definition"},{"location":"blog/CS-Graduates/machine_learning/RL/#whats-the-process","text":"","title":"What's the process?"},{"location":"blog/CS-Graduates/machine_learning/RL/#environment","text":"Action -> Transition function -> State of Env","title":"Environment"},{"location":"blog/CS-Graduates/machine_learning/RL/#agentrobot","text":"State -> Policy: \\(\\Pi(s)\\) -> Collect Rewards, Action","title":"Agent/Robot"},{"location":"blog/CS-Graduates/machine_learning/RL/#the-goal","text":"How to find \\(\\Pi\\) to maximize ?","title":"The goal"},{"location":"blog/CS-Graduates/machine_learning/RL/#trading-analog","text":"Environment = Market Action = Buy/Sell State = Factors of stocks, e.g. P/E, Rollinger Band Value, etc. Rewards = money returns Policy: \\(\\Pi\\) = Trading strategy","title":"Trading Analog"},{"location":"blog/CS-Graduates/machine_learning/RL/#algorithm-type","text":"","title":"Algorithm type"},{"location":"blog/CS-Graduates/machine_learning/RL/#model-based","text":"Use the transition T or the rewards R in the model.","title":"Model-Based"},{"location":"blog/CS-Graduates/machine_learning/RL/#model-free","text":"It does not know or use the models of the transitions T or the rewards R.","title":"Model Free"},{"location":"blog/CS-Graduates/machine_learning/RL/#reference","text":"Reinforcement Learning: A Survey Or Reinforcement Learning: A Survey-PDF Section 8.2 - Reinforcement Learning: An Introduction Section 9 - Reinforcement Learning: An Introduction PPT","title":"Reference"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/","text":"Q-Learning intro \u2693\ufe0e It use utility table for Q-Values. The best part of Q-Learning: it guarantees to provide a optimal policy. What\u2019s Q? Q means the function that the algorithm computes. \\(Q[s,a]=\\) immediate rewards + discounted rewards Short term rewards: Daily return Long term rewards: cumulative return How to use Q? \\(\\Pi(s)=argmax_a(Q[s,a])\\) The optimal: \\(\\Pi^*(s)=argmax_a(Q^*[s,a])\\) Update Rule \u2693\ufe0e \\(Q'[s,a]\\) = \\((1-\\alpha)Q[s,a]\\) + \\(\\alpha\\) * improved estimate where Improved Estimate = \\(r\\) + \\(\\gamma\\) * later rewards = \\(r\\) + \\(\\gamma\\) * \\(Q[s',argmax_a(Q[s',a'])\\) \\(\\alpha\\) : Learning rate [0, 1.0] \\(\\gamma\\) : discount rate [0, 1.0] State \u2693\ufe0e Can be used as state Adjusted close/SMA Bollinger Band Value P/E Ratio Holding stock Return since entry Creating the state State is an integer discretize each factor combine all factors Discretizing \u2693\ufe0e Convert a real number into integer. Summary \u2693\ufe0e It\u2019s a model free algorithm that does not know Transition matrix T or rewards function. Build a model \u2693\ufe0e Define states, actions, rewards Choose in-sample training period. iterate: Q-Table update back Steps: Init Q table observe S execute a, obverse \\(S'\\) , r Update Q with < \\(s, a, s', r\\) > Testing a model \u2693\ufe0e Backtest on later data. Dyna-Q \u2693\ufe0e Build up Transition matrix T and Rewards matrix R to speed up model convergences for Q-Learning. The real world training is expensive, we hallucinate many additional interactions, 100 rounds. Learning T \u2693\ufe0e \\(T[s,a,s']\\) = prob \\(s,a->s'\\) Init \\(T_c[]\\) = 0.00001 while executing, observe s,a,s\u2019 increment \\(T_c[s,a,s']\\) \\(T[s,a,s']=T_c[s,a,s']/(\\sum_i T[s,a,i])\\) Learning R \u2693\ufe0e \\(R'[s,a]=(1-\\alpha)R[s,a]+\\alpha*r\\) r = immediate rewards. R = expected reward for s,a. Dyna-Q Algorithm \u2693\ufe0e \\(T'[s,a,s']\\) update \\(R'[s,a]\\) update s = random a = random s\u2019 = infer from T[] r = R[s,a] Update Q with \\(<s,a,s',r>\\) Reference \u2693\ufe0e Reinforcement Q-Learning from Scratch in Python with OpenAI Gym Simple Reinforcement Learning: Q-learning Q-Learning in Python","title":"Q-learning"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#q-learning-intro","text":"It use utility table for Q-Values. The best part of Q-Learning: it guarantees to provide a optimal policy. What\u2019s Q? Q means the function that the algorithm computes. \\(Q[s,a]=\\) immediate rewards + discounted rewards Short term rewards: Daily return Long term rewards: cumulative return How to use Q? \\(\\Pi(s)=argmax_a(Q[s,a])\\) The optimal: \\(\\Pi^*(s)=argmax_a(Q^*[s,a])\\)","title":"Q-Learning intro"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#update-rule","text":"\\(Q'[s,a]\\) = \\((1-\\alpha)Q[s,a]\\) + \\(\\alpha\\) * improved estimate where Improved Estimate = \\(r\\) + \\(\\gamma\\) * later rewards = \\(r\\) + \\(\\gamma\\) * \\(Q[s',argmax_a(Q[s',a'])\\) \\(\\alpha\\) : Learning rate [0, 1.0] \\(\\gamma\\) : discount rate [0, 1.0]","title":"Update Rule"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#state","text":"Can be used as state Adjusted close/SMA Bollinger Band Value P/E Ratio Holding stock Return since entry Creating the state State is an integer discretize each factor combine all factors","title":"State"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#discretizing","text":"Convert a real number into integer.","title":"Discretizing"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#summary","text":"It\u2019s a model free algorithm that does not know Transition matrix T or rewards function.","title":"Summary"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#build-a-model","text":"Define states, actions, rewards Choose in-sample training period. iterate: Q-Table update back Steps: Init Q table observe S execute a, obverse \\(S'\\) , r Update Q with < \\(s, a, s', r\\) >","title":"Build a model"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#testing-a-model","text":"Backtest on later data.","title":"Testing a model"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#dyna-q","text":"Build up Transition matrix T and Rewards matrix R to speed up model convergences for Q-Learning. The real world training is expensive, we hallucinate many additional interactions, 100 rounds.","title":"Dyna-Q"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#learning-t","text":"\\(T[s,a,s']\\) = prob \\(s,a->s'\\) Init \\(T_c[]\\) = 0.00001 while executing, observe s,a,s\u2019 increment \\(T_c[s,a,s']\\) \\(T[s,a,s']=T_c[s,a,s']/(\\sum_i T[s,a,i])\\)","title":"Learning T"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#learning-r","text":"\\(R'[s,a]=(1-\\alpha)R[s,a]+\\alpha*r\\) r = immediate rewards. R = expected reward for s,a.","title":"Learning R"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#dyna-q-algorithm","text":"\\(T'[s,a,s']\\) update \\(R'[s,a]\\) update s = random a = random s\u2019 = infer from T[] r = R[s,a] Update Q with \\(<s,a,s',r>\\)","title":"Dyna-Q Algorithm"},{"location":"blog/CS-Graduates/machine_learning/RL/qlearning/#reference","text":"Reinforcement Q-Learning from Scratch in Python with OpenAI Gym Simple Reinforcement Learning: Q-learning Q-Learning in Python","title":"Reference"},{"location":"blog/CS-Graduates/machine_learning/supervised/","text":"Supervised ML problems \u2693\ufe0e Give data set X, Y as the label, predict the Y\u2019 Label for the testing data set X\u2019.","title":"Supervised"},{"location":"blog/CS-Graduates/machine_learning/supervised/#supervised-ml-problems","text":"Give data set X, Y as the label, predict the Y\u2019 Label for the testing data set X\u2019.","title":"Supervised ML problems"},{"location":"blog/CS-Graduates/machine_learning/supervised/decision_trees/","text":"Decision Trees (DTs) \u2693\ufe0e Scikit-Learn Decision Tree","title":"DTs"},{"location":"blog/CS-Graduates/machine_learning/supervised/decision_trees/#decision-trees-dts","text":"Scikit-Learn Decision Tree","title":"Decision Trees (DTs)"},{"location":"blog/CS-Graduates/machine_learning/unsupervised/","text":"Problems \u2693\ufe0e Given X, The goal is to organize the data or to describe its structure. e.g. K-Means","title":"unsupervised"},{"location":"blog/CS-Graduates/machine_learning/unsupervised/#problems","text":"Given X, The goal is to organize the data or to describe its structure. e.g. K-Means","title":"Problems"},{"location":"blog/CS-Graduates/philosophy/manifesto/","text":"Minifesto Manifesto for Software Craftsmanship","title":"Manifestos"},{"location":"blog/CS-Graduates/research/resources/","text":"Research resources \u2693\ufe0e guide2research Top publications \u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u4e16\u754c\u4e09\u5927\u9876\u7ea7\u4f1a\u8bae\u5206\u522b\u4e3aCVPR\u3001ICCV\u548cECCV\u3002 1. Database\u6570\u636e\u5e93\u65b9\u5411\u56fd\u9645\u4e09\u5927\u9876\u7ea7\u4f1a\u8bae\u5206\u522b\u4e3a\uff1a \u2693\ufe0e SIGMOD\uff1aSpecial Interest Group on Management Of Data VLDB\uff1aInternational Conference on Very Large Data Bases ICDE\uff1aInternational Conference on Data Engineering 2. Machine Learning\u673a\u5668\u5b66\u4e60\u65b9\u5411\u56fd\u9645\u9876\u7ea7\u4f1a\u8bae\u63a8\u8350\uff1a \u2693\ufe0e ICML\uff1aInternational Conference on Machine Learning NIPS\uff1aNeural Information Processing Systems 3. Artificial intelligence\u4eba\u5de5\u667a\u80fd\u65b9\u5411\u56fd\u9645\u4f1a\u8bae\u63a8\u8350\uff1a \u2693\ufe0e AAAI\uff1aAmerican Association for Artificial Intelligence IJCAI\uff1aInternational Joint Conference on Artificial Intelligence NIPS\uff1aNeural Information Processing Systems ICML\uff1aInternational Conference on Machine Learning Publisher \u2693\ufe0e Elsevier\u3001Springer\u3001Taylor & Francis \u548cWiley-Blackwell\u56db\u5927\u9738\u4e3b\u5784\u65ad\u884c\u4e1a","title":"Research resources"},{"location":"blog/CS-Graduates/research/resources/#research-resources","text":"guide2research Top publications \u8ba1\u7b97\u673a\u89c6\u89c9\u9886\u57df\u4e16\u754c\u4e09\u5927\u9876\u7ea7\u4f1a\u8bae\u5206\u522b\u4e3aCVPR\u3001ICCV\u548cECCV\u3002","title":"Research resources"},{"location":"blog/CS-Graduates/research/resources/#1-database\u6570\u636e\u5e93\u65b9\u5411\u56fd\u9645\u4e09\u5927\u9876\u7ea7\u4f1a\u8bae\u5206\u522b\u4e3a","text":"SIGMOD\uff1aSpecial Interest Group on Management Of Data VLDB\uff1aInternational Conference on Very Large Data Bases ICDE\uff1aInternational Conference on Data Engineering","title":"1. Database\u6570\u636e\u5e93\u65b9\u5411\u56fd\u9645\u4e09\u5927\u9876\u7ea7\u4f1a\u8bae\u5206\u522b\u4e3a\uff1a"},{"location":"blog/CS-Graduates/research/resources/#2-machine-learning\u673a\u5668\u5b66\u4e60\u65b9\u5411\u56fd\u9645\u9876\u7ea7\u4f1a\u8bae\u63a8\u8350","text":"ICML\uff1aInternational Conference on Machine Learning NIPS\uff1aNeural Information Processing Systems","title":"2. Machine Learning\u673a\u5668\u5b66\u4e60\u65b9\u5411\u56fd\u9645\u9876\u7ea7\u4f1a\u8bae\u63a8\u8350\uff1a"},{"location":"blog/CS-Graduates/research/resources/#3-artificial-intelligence\u4eba\u5de5\u667a\u80fd\u65b9\u5411\u56fd\u9645\u4f1a\u8bae\u63a8\u8350","text":"AAAI\uff1aAmerican Association for Artificial Intelligence IJCAI\uff1aInternational Joint Conference on Artificial Intelligence NIPS\uff1aNeural Information Processing Systems ICML\uff1aInternational Conference on Machine Learning","title":"3. Artificial intelligence\u4eba\u5de5\u667a\u80fd\u65b9\u5411\u56fd\u9645\u4f1a\u8bae\u63a8\u8350\uff1a"},{"location":"blog/CS-Graduates/research/resources/#publisher","text":"Elsevier\u3001Springer\u3001Taylor & Francis \u548cWiley-Blackwell\u56db\u5927\u9738\u4e3b\u5784\u65ad\u884c\u4e1a","title":"Publisher"},{"location":"blog/CS-Graduates/security/OAuth/","text":"OAuth 2.0 \u2693\ufe0e OAuth is widely used by third party grant access. FLAG companies provide the service. OAuth token expire time OAuth 2.0 Sample code","title":"OAuth 2.0"},{"location":"blog/CS-Graduates/security/OAuth/#oauth-20","text":"OAuth is widely used by third party grant access. FLAG companies provide the service. OAuth token expire time OAuth 2.0 Sample code","title":"OAuth 2.0"},{"location":"blog/CS-Graduates/software_engineering/software_engieering/","text":"Software Engineering practices \u2693\ufe0e Secured SDLC \u2693\ufe0e What is the secure software development life cycle (SDLC)? | Synopsys Microsoft Security Development Lifecycle NIST Secure Software Development Framework Building Security In Maturity Model (BSIMM) 12 factor methodology \u2693\ufe0e What is API security? OAuth 2.0 JSON Web Token Introduction - jwt.io","title":"Software Engineering practices"},{"location":"blog/CS-Graduates/software_engineering/software_engieering/#software-engineering-practices","text":"","title":"Software Engineering practices"},{"location":"blog/CS-Graduates/software_engineering/software_engieering/#secured-sdlc","text":"What is the secure software development life cycle (SDLC)? | Synopsys Microsoft Security Development Lifecycle NIST Secure Software Development Framework Building Security In Maturity Model (BSIMM)","title":"Secured SDLC"},{"location":"blog/CS-Graduates/software_engineering/software_engieering/#12-factor-methodology","text":"What is API security? OAuth 2.0 JSON Web Token Introduction - jwt.io","title":"12 factor methodology"},{"location":"blog/CS101/Database/no_sql/","text":"Non-SQL DB \u2693\ufe0e XPath tutorial - basics - EduTech Wiki","title":"Database"},{"location":"blog/CS101/Database/no_sql/#non-sql-db","text":"XPath tutorial - basics - EduTech Wiki","title":"Non-SQL DB"},{"location":"blog/CS101/Database/sql/","text":"SQL DB \u2693\ufe0e Database index \u2693\ufe0e Fill Factor: Understanding SQL Server Index Fill Factor Setting Index creation SQL: SQL - Indexes - Tutorialspoint Inde architecture type: Relational Algebra - Tutorialspoint \u2693\ufe0e Relational Algebra Introduction - scranton Relational Algebra - juniata SQL JOINS - w3resource Relational Algebra Jeffrey D. Ullman \u2693\ufe0e Database Systems: The Complete Book OLAP-Online analytical processing - Wikipedia \u2693\ufe0e Cubes - OLAP Framework \u2014 Cubes 1.0.1 documentation Apache Pinot Apache Kylin Database normalization - Wikipedia \u2693\ufe0e","title":"Sql"},{"location":"blog/CS101/Database/sql/#sql-db","text":"","title":"SQL DB"},{"location":"blog/CS101/Database/sql/#database-index","text":"Fill Factor: Understanding SQL Server Index Fill Factor Setting Index creation SQL: SQL - Indexes - Tutorialspoint Inde architecture type:","title":"Database index"},{"location":"blog/CS101/Database/sql/#relational-algebra---tutorialspoint","text":"Relational Algebra Introduction - scranton Relational Algebra - juniata SQL JOINS - w3resource Relational Algebra","title":"Relational Algebra - Tutorialspoint"},{"location":"blog/CS101/Database/sql/#jeffrey-d-ullman","text":"Database Systems: The Complete Book","title":"Jeffrey D. Ullman"},{"location":"blog/CS101/Database/sql/#olap-online-analytical-processing---wikipedia","text":"Cubes - OLAP Framework \u2014 Cubes 1.0.1 documentation Apache Pinot Apache Kylin","title":"OLAP-Online analytical processing - Wikipedia"},{"location":"blog/CS101/Database/sql/#database-normalization---wikipedia","text":"","title":"Database normalization - Wikipedia"},{"location":"blog/CS101/algorithms/","text":"Sorting Greedy Dynamic programming","title":"Algorithms"},{"location":"blog/CS101/algorithms/dp_maximum_subarray_kadane_algorithm/","text":"DP Maximum Subarray - Kadane\u2019s Algorithm \u2693\ufe0e Maximum Subarray - Monisha Mathew - Medium Maximum Subarray, using DP - Monisha Mathew - Medium DP in Depth Explanation\u2026 Divide the problem into several steps Find the data structure. Store the solution of the sub-problem Every DP starts with a matrix.","title":"DP Maximum Subarray - Kadane\u2019s Algorithm"},{"location":"blog/CS101/algorithms/dp_maximum_subarray_kadane_algorithm/#dp-maximum-subarray---kadanes-algorithm","text":"Maximum Subarray - Monisha Mathew - Medium Maximum Subarray, using DP - Monisha Mathew - Medium DP in Depth Explanation\u2026 Divide the problem into several steps Find the data structure. Store the solution of the sub-problem Every DP starts with a matrix.","title":"DP Maximum Subarray - Kadane\u2019s Algorithm"},{"location":"blog/CS101/algorithms/greedy_vs_dp/","text":"Greedy vs DP \u2693\ufe0e Greedy Keys: \u2693\ufe0e Have a optimal solutio in every step. It\u2019s not necessary the optimal solution though. Each step DP \u2693\ufe0e Steps: 1.","title":"Greedy vs DP"},{"location":"blog/CS101/algorithms/greedy_vs_dp/#greedy-vs-dp","text":"","title":"Greedy vs DP"},{"location":"blog/CS101/algorithms/greedy_vs_dp/#greedy-keys","text":"Have a optimal solutio in every step. It\u2019s not necessary the optimal solution though. Each step","title":"Greedy Keys:"},{"location":"blog/CS101/algorithms/greedy_vs_dp/#dp","text":"Steps: 1.","title":"DP"},{"location":"blog/CS101/algorithms/majority_element_-_boyer%E2%80%93moore_majority_vote/","text":"Majority Element - Boyer\u2013Moore majority vote \u2693\ufe0e Boyer\u2013Moore majority vote algorithm - Wikipedia 169. Majority Element 229. Majority Element II \u4e00\u4e9b\u6469\u5c14\u6295\u7968\u6cd5\u7684\u601d\u8003\u548c\u7406\u89e3_\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5_qq_31839461\u7684\u535a\u5ba2-CSDN\u535a\u5ba2 Intuition \u2693\ufe0e If we had some way of counting instances of the majority element as +1 and instances of any other element as \u22121, summing them would make it obvious that the majority element is indeed the majority element. Algorithm \u2693\ufe0e Essentially, what Boyer-Moore does is look for a suffix sufsuf of nums where suf[0]suf[0] is the majority element in that suffix. To do this, we maintain a count, which is incremented whenever we see an instance of our current candidate for majority element and decremented whenever we see anything else. Whenever count equals 0, we effectively forget about everything in nums up to the current index and consider the current number as the candidate for majority element. It is not immediately obvious why we can get away with forgetting prefixes of nums - consider the following examples (pipes are inserted to separate runs of nonzero count). \\[7, 7, 5, 7, 5, 1 | 5, 7 | 5, 5, 7, 7 | 7, 7, 7, 7\\] Here, the 7 at index 0 is selected to be the first candidate for majority element. count will eventually reach 0 after index 5 is processed, so the 5 at index 6 will be the next candidate. In this case, 7 is the true majority element, so by disregarding this prefix, we are ignoring an equal number of majority and minority elements - therefore, 7 will still be the majority element in the suffix formed by throwing away the first prefix. \\[7, 7, 5, 7, 5, 1 | 5, 7 | 5, 5, 7, 7 | 5, 5, 5, 5\\] Now, the majority element is 5 (we changed the last run of the array from 7s to 5s), but our first candidate is still 7. In this case, our candidate is not the true majority element, but we still cannot discard more majority elements than minority elements (this would imply that count could reach -1 before we reassign candidate, which is obviously false). Therefore, given that it is impossible (in both cases) to discard more majority elements than minority elements, we are safe in discarding the prefix and attempting to recursively solve the majority element problem for the suffix. Eventually, a suffix will be found for which count does not hit 0, and the majority element of that suffix will necessarily be the same as the majority element of the overall array.","title":"Majority Element - Boyer\u2013Moore majority vote"},{"location":"blog/CS101/algorithms/majority_element_-_boyer%E2%80%93moore_majority_vote/#majority-element---boyermoore-majority-vote","text":"Boyer\u2013Moore majority vote algorithm - Wikipedia 169. Majority Element 229. Majority Element II \u4e00\u4e9b\u6469\u5c14\u6295\u7968\u6cd5\u7684\u601d\u8003\u548c\u7406\u89e3_\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5_qq_31839461\u7684\u535a\u5ba2-CSDN\u535a\u5ba2","title":"Majority Element - Boyer\u2013Moore majority vote"},{"location":"blog/CS101/algorithms/majority_element_-_boyer%E2%80%93moore_majority_vote/#intuition","text":"If we had some way of counting instances of the majority element as +1 and instances of any other element as \u22121, summing them would make it obvious that the majority element is indeed the majority element.","title":"Intuition"},{"location":"blog/CS101/algorithms/majority_element_-_boyer%E2%80%93moore_majority_vote/#algorithm","text":"Essentially, what Boyer-Moore does is look for a suffix sufsuf of nums where suf[0]suf[0] is the majority element in that suffix. To do this, we maintain a count, which is incremented whenever we see an instance of our current candidate for majority element and decremented whenever we see anything else. Whenever count equals 0, we effectively forget about everything in nums up to the current index and consider the current number as the candidate for majority element. It is not immediately obvious why we can get away with forgetting prefixes of nums - consider the following examples (pipes are inserted to separate runs of nonzero count). \\[7, 7, 5, 7, 5, 1 | 5, 7 | 5, 5, 7, 7 | 7, 7, 7, 7\\] Here, the 7 at index 0 is selected to be the first candidate for majority element. count will eventually reach 0 after index 5 is processed, so the 5 at index 6 will be the next candidate. In this case, 7 is the true majority element, so by disregarding this prefix, we are ignoring an equal number of majority and minority elements - therefore, 7 will still be the majority element in the suffix formed by throwing away the first prefix. \\[7, 7, 5, 7, 5, 1 | 5, 7 | 5, 5, 7, 7 | 5, 5, 5, 5\\] Now, the majority element is 5 (we changed the last run of the array from 7s to 5s), but our first candidate is still 7. In this case, our candidate is not the true majority element, but we still cannot discard more majority elements than minority elements (this would imply that count could reach -1 before we reassign candidate, which is obviously false). Therefore, given that it is impossible (in both cases) to discard more majority elements than minority elements, we are safe in discarding the prefix and attempting to recursively solve the majority element problem for the suffix. Eventually, a suffix will be found for which count does not hit 0, and the majority element of that suffix will necessarily be the same as the majority element of the overall array.","title":"Algorithm"},{"location":"blog/CS101/algorithms/np_complete/","text":"NP complete \u2693\ufe0e Decide if an algorithm is NP and find the approximate solution.","title":"NP complete"},{"location":"blog/CS101/algorithms/np_complete/#np-complete","text":"Decide if an algorithm is NP and find the approximate solution.","title":"NP complete"},{"location":"blog/CS101/algorithms/sorting_algorithm/","text":"Sorting algorithm \u2693\ufe0e Comparison sort \u2693\ufe0e Merge sort quick sort heap sort Non-comparison sort \u2693\ufe0e Counting sort bucket sort radix sort \u2019\u2018\u2019 \u2018\u2019\u2018","title":"Sorting algorithm"},{"location":"blog/CS101/algorithms/sorting_algorithm/#sorting-algorithm","text":"","title":"Sorting algorithm"},{"location":"blog/CS101/algorithms/sorting_algorithm/#comparison-sort","text":"Merge sort quick sort heap sort","title":"Comparison sort"},{"location":"blog/CS101/algorithms/sorting_algorithm/#non-comparison-sort","text":"Counting sort bucket sort radix sort \u2019\u2018\u2019 \u2018\u2019\u2018","title":"Non-comparison sort"},{"location":"blog/CS101/network/cmd/","text":"Ubuntu Command ip -c address nmcli nslookup","title":"Network"},{"location":"blog/CS101/network/knowledge/","text":"Protocol Numbers TCP/IP Ports and Protocols | TCP/IP Ports and Protocols | Pearson IT Certification An overview of HTTP - HTTP | MDN Firewall Package filtering (IP/TCP layer) Session layer Connection tracking Application layer 7 Deep packet inspection - Wikipedia Web filtering Intrusion prevention systems User identity management Web application firewall Well-known ports","title":"Knowledge"},{"location":"blog/QA/","text":"Requirements analysis \u2693\ufe0e QA professionals are involved in the analysis and clarification of functional and non-functional software requirements and make sure the requirements are clear, consistent, complete, traceable, and testable Test planning \u2693\ufe0e Test plan ISO/IEC/IEEE 29119-3:2013 A test plan should contain a test strategy and cover a testing scope, a project budget and deadlines, the types and levels of testing an application requires, bug tracking and reporting procedures, resources and their responsibilities, and other factors. Test design \u2693\ufe0e QA specialists design test cases or checklists covering software requirements. Test cases outline conditions, test data (prepared at the test design stage as well), and test steps needed to validate particular functionality, and state an expected test result. Test execution and defect reporting \u2693\ufe0e Retesting and regression testing \u2693\ufe0e Release testing \u2693\ufe0e Smoke testing References \u2693\ufe0e A Practical Guide to the Software QA Process QA process maturity: Models and capabilities QA process","title":"QA"},{"location":"blog/QA/#requirements-analysis","text":"QA professionals are involved in the analysis and clarification of functional and non-functional software requirements and make sure the requirements are clear, consistent, complete, traceable, and testable","title":"Requirements analysis"},{"location":"blog/QA/#test-planning","text":"Test plan ISO/IEC/IEEE 29119-3:2013 A test plan should contain a test strategy and cover a testing scope, a project budget and deadlines, the types and levels of testing an application requires, bug tracking and reporting procedures, resources and their responsibilities, and other factors.","title":"Test planning"},{"location":"blog/QA/#test-design","text":"QA specialists design test cases or checklists covering software requirements. Test cases outline conditions, test data (prepared at the test design stage as well), and test steps needed to validate particular functionality, and state an expected test result.","title":"Test design"},{"location":"blog/QA/#test-execution-and-defect-reporting","text":"","title":"Test execution and defect reporting"},{"location":"blog/QA/#retesting-and-regression-testing","text":"","title":"Retesting and regression testing"},{"location":"blog/QA/#release-testing","text":"Smoke testing","title":"Release testing"},{"location":"blog/QA/#references","text":"A Practical Guide to the Software QA Process QA process maturity: Models and capabilities QA process","title":"References"},{"location":"blog/QA/grey_box_testing/","text":"Grey Box Testing \u2693\ufe0e What is Grey Box Testing? Techniques, Example","title":"Grey Box Testing"},{"location":"blog/QA/grey_box_testing/#grey-box-testing","text":"What is Grey Box Testing? Techniques, Example","title":"Grey Box Testing"},{"location":"blog/QA/testing_technology/","text":"Testing technology \u2693\ufe0e Key idea \u2693\ufe0e Parametrized testing - Data Driven Testing Behavior Driven testing. Jave \u2693\ufe0e Selenium Loadrunner jmeter Python \u2693\ufe0e pytest","title":"Testing technology"},{"location":"blog/QA/testing_technology/#testing-technology","text":"","title":"Testing technology"},{"location":"blog/QA/testing_technology/#key-idea","text":"Parametrized testing - Data Driven Testing Behavior Driven testing.","title":"Key idea"},{"location":"blog/QA/testing_technology/#jave","text":"Selenium Loadrunner jmeter","title":"Jave"},{"location":"blog/QA/testing_technology/#python","text":"pytest","title":"Python"},{"location":"blog/career_plan/entrepreneur/","text":"Case study \u2693\ufe0e Unicorns Last three years IPO tech companies. Devops cloud tools - 5 billions \u2693\ufe0e hashicorp provides deployment tools. The Tao of HashiCorp Revenue: ViaWeb \u2693\ufe0e 3 developers Red Hat","title":"Career plan"},{"location":"blog/career_plan/entrepreneur/#case-study","text":"Unicorns Last three years IPO tech companies.","title":"Case study"},{"location":"blog/career_plan/entrepreneur/#devops-cloud-tools---5-billions","text":"hashicorp provides deployment tools. The Tao of HashiCorp Revenue:","title":"Devops cloud tools - 5 billions"},{"location":"blog/career_plan/entrepreneur/#viaweb","text":"3 developers Red Hat","title":"ViaWeb"},{"location":"blog/career_plan/oms_cs/","text":"OMS CS \u2693\ufe0e Is GaTech OMSCS right for you? (or Is any Online CS Masters right for you?) Georgia Tech Online Master of Science in Computer Science","title":"OMS CS"},{"location":"blog/career_plan/oms_cs/#oms-cs","text":"Is GaTech OMSCS right for you? (or Is any Online CS Masters right for you?) Georgia Tech Online Master of Science in Computer Science","title":"OMS CS"},{"location":"blog/career_plan/tech_events/","text":"KubeCon + CloudNativeCon North America 2020 Linux Foundation Events Google Developers Cloud Native Computing Foundation Stack Overflow Developer Survey 2019 Salary by Developer Type","title":"Tech events"},{"location":"blog/career_plan/tech_lists/","text":"Technical competency \u2693\ufe0e Skill sets with SMART Goals \u2693\ufe0e Python Flask Pytest Jenkins CI/CD Docker Kubernetes OOP Java groovy gradle mySQL DB manual Git Nonclustered Index Structures | Microsoft Docs Algorithms \u2693\ufe0e Data Structures \u2693\ufe0e System Design \u2693\ufe0e High Level Courses \u2693\ufe0e Azure cloud \u2693\ufe0e References: 11 Essential Skills Software Developers should Learn in 2020 - DEV","title":"Technical competency"},{"location":"blog/career_plan/tech_lists/#technical-competency","text":"","title":"Technical competency"},{"location":"blog/career_plan/tech_lists/#skill-sets-with-smart-goals","text":"Python Flask Pytest Jenkins CI/CD Docker Kubernetes OOP Java groovy gradle mySQL DB manual Git Nonclustered Index Structures | Microsoft Docs","title":"Skill sets with SMART Goals"},{"location":"blog/career_plan/tech_lists/#algorithms","text":"","title":"Algorithms"},{"location":"blog/career_plan/tech_lists/#data-structures","text":"","title":"Data Structures"},{"location":"blog/career_plan/tech_lists/#system-design","text":"","title":"System Design"},{"location":"blog/career_plan/tech_lists/#high-level-courses","text":"","title":"High Level Courses"},{"location":"blog/career_plan/tech_lists/#azure-cloud","text":"References: 11 Essential Skills Software Developers should Learn in 2020 - DEV","title":"Azure cloud"},{"location":"blog/career_plan/interviews/BQ/STAR/","text":"STAR/CAR Method \u2693\ufe0e The STAR format stands for Situation , Task , Action ,*Result *: S ituation: An event, project, or challenge faced T ask: Your responsibilities and assignments for the situation A ction: Steps or procedure taken to relieve or rectify situation R esult: Results of actions taken. The STAR interview method is also called the CAR method, which stands for Context/Challenge, Action . How to Use STAR Method Technique for Interview Questions How to Use the STAR Interview Response Technique How to Prepare for a Behavioral Interview 30 Behavioral Interview Questions You Should Be Ready to Answer \u2693\ufe0e How To Master the STAR Method For Interview Questions Consistent cache Blue filter Filter Class - AWS Glue What\u2019s your last question \u2693\ufe0e What\u2019s your expectation in your first 3-month / goal in your team? What\u2019s your most challenging task you\u2019ve met? What\u2019s your highest priority or current challenging in your team? What\u2019s your technical stack and main programming language?","title":"STAR/CAR Method"},{"location":"blog/career_plan/interviews/BQ/STAR/#starcar-method","text":"The STAR format stands for Situation , Task , Action ,*Result *: S ituation: An event, project, or challenge faced T ask: Your responsibilities and assignments for the situation A ction: Steps or procedure taken to relieve or rectify situation R esult: Results of actions taken. The STAR interview method is also called the CAR method, which stands for Context/Challenge, Action . How to Use STAR Method Technique for Interview Questions How to Use the STAR Interview Response Technique How to Prepare for a Behavioral Interview","title":"STAR/CAR Method"},{"location":"blog/career_plan/interviews/BQ/STAR/#30-behavioral-interview-questions-you-should-be-ready-to-answer","text":"How To Master the STAR Method For Interview Questions Consistent cache Blue filter Filter Class - AWS Glue","title":"30 Behavioral Interview Questions You Should Be Ready to Answer"},{"location":"blog/career_plan/interviews/BQ/STAR/#whats-your-last-question","text":"What\u2019s your expectation in your first 3-month / goal in your team? What\u2019s your most challenging task you\u2019ve met? What\u2019s your highest priority or current challenging in your team? What\u2019s your technical stack and main programming language?","title":"What's your last question"},{"location":"blog/cloud/google/","text":"GCP \u2693\ufe0e How to use k8s with jenkins? Jenkins-on-k8s","title":"Google"},{"location":"blog/cloud/google/#gcp","text":"How to use k8s with jenkins? Jenkins-on-k8s","title":"GCP"},{"location":"blog/cmd/linux/","text":"A journey of a thousand miles begins with a single step , A system of a billions logics starts with a single command.","title":"Linux"},{"location":"blog/cmd/linux/code_analysis/","text":"cloc \u2693\ufe0e Sample output cloc . 74 text files. 74 unique files. 30 files ignored. github.com/AlDanial/cloc v 1.74 T=0.69 s (95.5 files/s, 12499.8 lines/s) ------------------------------------------------------------------------------- Language files blank comment code ------------------------------------------------------------------------------- Python 53 2114 2168 4242 Bourne Shell 12 16 0 73 Markdown 1 8 0 14 ------------------------------------------------------------------------------- SUM: 66 2138 2168 4329 -------------------------------------------------------------------------------","title":"Analyze the code"},{"location":"blog/cmd/linux/code_analysis/#cloc","text":"Sample output cloc . 74 text files. 74 unique files. 30 files ignored. github.com/AlDanial/cloc v 1.74 T=0.69 s (95.5 files/s, 12499.8 lines/s) ------------------------------------------------------------------------------- Language files blank comment code ------------------------------------------------------------------------------- Python 53 2114 2168 4242 Bourne Shell 12 16 0 73 Markdown 1 8 0 14 ------------------------------------------------------------------------------- SUM: 66 2138 2168 4329 -------------------------------------------------------------------------------","title":"cloc"},{"location":"blog/devops/","text":"DevOps RoadMap \u2693\ufe0e devops-roadmap Devops Tools Monitor tool \u2693\ufe0e Sensu prometheus alertmanager zabbix Development environment management Terraform (GO) Infrastructure management - primarily managing remote resources in cloud providers such as AWS. Vagrant (Ruby) is a tool for building and managing virtual machine environments in a single workflow. Vagrant vs. Terraform | Vagrant by HashiCorp","title":"Devops"},{"location":"blog/devops/#devops-roadmap","text":"devops-roadmap Devops Tools","title":"DevOps RoadMap"},{"location":"blog/devops/#monitor-tool","text":"Sensu prometheus alertmanager zabbix Development environment management Terraform (GO) Infrastructure management - primarily managing remote resources in cloud providers such as AWS. Vagrant (Ruby) is a tool for building and managing virtual machine environments in a single workflow. Vagrant vs. Terraform | Vagrant by HashiCorp","title":"Monitor tool"},{"location":"blog/devops/CM/","text":"Configuration Management \u2693\ufe0e Infrastructure as code - Wikipedia Ansible \u2693\ufe0e User Guide \u2014 Ansible Documentation What? Automation language, automation engines. Terraform Chef","title":"Configuration Management"},{"location":"blog/devops/CM/#configuration-management","text":"Infrastructure as code - Wikipedia","title":"Configuration Management"},{"location":"blog/devops/CM/#ansible","text":"User Guide \u2014 Ansible Documentation What? Automation language, automation engines. Terraform Chef","title":"Ansible"},{"location":"blog/devops/tools/","text":"Remote debugger \u2693\ufe0e theiaide VS Code Server","title":"DevOps-Tools"},{"location":"blog/devops/tools/#remote-debugger","text":"theiaide VS Code Server","title":"Remote debugger"},{"location":"blog/devops/CI-CD/jenkins/jenkins/","text":"Tikal Knowledge - Generic Python script-runner using Dockerized Jenkins-pipeline GitHub - jenkinsci/pyenv-pipeline-plugin: Execute commands in Python virtualenvs in Jenkins Pipeline DSL Exercise: Run LeTP-UnitTests locally with docker. Using Docker with Pipeline declarative-pipeline-fundamentals Q&A: \u2693\ufe0e What\u2019s two types of pipeline? \u2693\ufe0e Pipeline Syntax Declarative and Scripted pipeline.","title":"Jenkins"},{"location":"blog/devops/CI-CD/jenkins/jenkins/#qa","text":"","title":"Q&amp;A:"},{"location":"blog/devops/CI-CD/jenkins/jenkins/#whats-two-types-of-pipeline","text":"Pipeline Syntax Declarative and Scripted pipeline.","title":"What's two types of pipeline?"},{"location":"blog/devops/CI-CD/jenkins/jenkins_design/","text":"Jenkins design \u2693\ufe0e structuring the project to core, plugins, modules, and other independent pieces","title":"Jenkins design"},{"location":"blog/devops/CI-CD/jenkins/jenkins_design/#jenkins-design","text":"structuring the project to core, plugins, modules, and other independent pieces","title":"Jenkins design"},{"location":"blog/devops/CI-CD/jenkins/jenkins_pipeline/","text":"Jenkins pipeline \u2693\ufe0e Jenkins: Using Gradle to build your Shared Library \\| Rubix Jenkins: Preparing your Shared Library for tests \\| Rubix Jenkins: Testing a full declarative pipeline in your Shared Library \\| Rubix","title":"Jenkins pipeline"},{"location":"blog/devops/CI-CD/jenkins/jenkins_pipeline/#jenkins-pipeline","text":"Jenkins: Using Gradle to build your Shared Library \\| Rubix Jenkins: Preparing your Shared Library for tests \\| Rubix Jenkins: Testing a full declarative pipeline in your Shared Library \\| Rubix","title":"Jenkins pipeline"},{"location":"blog/devops/k8s/k8s_concepts/","text":"Kubernetes \u2693\ufe0e What\u2019s k8s \u2693\ufe0e Resource boundaries in different deployment era: Traditional - No boundary Virtualized - Isolated resource and security Container - Bin + app Facilitate Canary deployments minikube \u2693\ufe0e minikube provisions and manages local Kubernetes clusters optimized for development workflows. MiniKube vs MicroK8s k8s components \u2693\ufe0e Control Plane Components \u2693\ufe0e k8s cluster = a set of worker machines(nodes) pods : smallest deployable units kube-apiserver: Front end of control plane etcd: distributed data store for cluster data. kube-scheduler: allocate newly created pods to an available node. kube-controller-manager: Node, Replication, Endpoints, Service Account & Token controller. cloud-controller-manager: Node, Route, Service controller dependencies. Node components \u2693\ufe0e kubelet: manages docker to conform PodSpecs kube-proxy: k8s service implementation. Container runtime: Docker Addons \u2693\ufe0e DNS: For service and pods Dashboard; UI Container Resource Monitoring Cluster-level Logging K8s diagrams k3s vs minikube vs kind The Kubernetes API \u2693\ufe0e Open API API object needs to handle buffer, xml or json? Google developed protobuf before. protobuf like design Kubernetes Objects - \u201crecord of intent\u201d \u2693\ufe0e Kubernetes objects are persistent entities in the Kubernetes system. Object Spec: describe the desired state Status: current state of the object, managed by k8s control plane. Management techniques \u2693\ufe0e Imperative commands: kubectl Imperative object config: .yaml file Declarative object config: directory of files. Troubleshooting: k8s error imagepullbackoff Object Names and IDs \u2693\ufe0e Names: /api/v1/pods/some-name IDs: UUID to track historical occurences. Namespaces \u2693\ufe0e Virtual cluster kubectl get namespace Namespaces and DNS: When you create a Service , it creates a corresponding DNS entry . Labels and selectors \u2693\ufe0e Labels = Identifying key/values selectors: filtering via label. equality-based : = , == , != set-based : in , notin and exists Annotations \u2693\ufe0e arbitrary non-identifying metadata to objects. Field Selectors \u2693\ufe0e kubectl get pods --field-selector status.phase = Running Cluster architecture \u2693\ufe0e Nodes \u2693\ufe0e Components: kubelet , a container runtime , and the kube-proxy Adding nodes: kubelet can self-register user manually add","title":"K8s"},{"location":"blog/devops/k8s/k8s_concepts/#kubernetes","text":"","title":"Kubernetes"},{"location":"blog/devops/k8s/k8s_concepts/#whats-k8s","text":"Resource boundaries in different deployment era: Traditional - No boundary Virtualized - Isolated resource and security Container - Bin + app Facilitate Canary deployments","title":"What's k8s"},{"location":"blog/devops/k8s/k8s_concepts/#minikube","text":"minikube provisions and manages local Kubernetes clusters optimized for development workflows. MiniKube vs MicroK8s","title":"minikube"},{"location":"blog/devops/k8s/k8s_concepts/#k8s-components","text":"","title":"k8s components"},{"location":"blog/devops/k8s/k8s_concepts/#control-plane-components","text":"k8s cluster = a set of worker machines(nodes) pods : smallest deployable units kube-apiserver: Front end of control plane etcd: distributed data store for cluster data. kube-scheduler: allocate newly created pods to an available node. kube-controller-manager: Node, Replication, Endpoints, Service Account & Token controller. cloud-controller-manager: Node, Route, Service controller dependencies.","title":"Control Plane Components"},{"location":"blog/devops/k8s/k8s_concepts/#node-components","text":"kubelet: manages docker to conform PodSpecs kube-proxy: k8s service implementation. Container runtime: Docker","title":"Node components"},{"location":"blog/devops/k8s/k8s_concepts/#addons","text":"DNS: For service and pods Dashboard; UI Container Resource Monitoring Cluster-level Logging K8s diagrams k3s vs minikube vs kind","title":"Addons"},{"location":"blog/devops/k8s/k8s_concepts/#the-kubernetes-api","text":"Open API API object needs to handle buffer, xml or json? Google developed protobuf before. protobuf like design","title":"The Kubernetes API"},{"location":"blog/devops/k8s/k8s_concepts/#kubernetes-objects---record-of-intent","text":"Kubernetes objects are persistent entities in the Kubernetes system. Object Spec: describe the desired state Status: current state of the object, managed by k8s control plane.","title":"Kubernetes Objects - \"record of intent\""},{"location":"blog/devops/k8s/k8s_concepts/#management-techniques","text":"Imperative commands: kubectl Imperative object config: .yaml file Declarative object config: directory of files. Troubleshooting: k8s error imagepullbackoff","title":"Management techniques"},{"location":"blog/devops/k8s/k8s_concepts/#object-names-and-ids","text":"Names: /api/v1/pods/some-name IDs: UUID to track historical occurences.","title":"Object Names and IDs"},{"location":"blog/devops/k8s/k8s_concepts/#namespaces","text":"Virtual cluster kubectl get namespace Namespaces and DNS: When you create a Service , it creates a corresponding DNS entry .","title":"Namespaces"},{"location":"blog/devops/k8s/k8s_concepts/#labels-and-selectors","text":"Labels = Identifying key/values selectors: filtering via label. equality-based : = , == , != set-based : in , notin and exists","title":"Labels and selectors"},{"location":"blog/devops/k8s/k8s_concepts/#annotations","text":"arbitrary non-identifying metadata to objects.","title":"Annotations"},{"location":"blog/devops/k8s/k8s_concepts/#field-selectors","text":"kubectl get pods --field-selector status.phase = Running","title":"Field Selectors"},{"location":"blog/devops/k8s/k8s_concepts/#cluster-architecture","text":"","title":"Cluster architecture"},{"location":"blog/devops/k8s/k8s_concepts/#nodes","text":"Components: kubelet , a container runtime , and the kube-proxy Adding nodes: kubelet can self-register user manually add","title":"Nodes"},{"location":"blog/devops/k8s/k8s_container/","text":"Container \u2693\ufe0e Images|Kubernetes \u2693\ufe0e","title":"Container"},{"location":"blog/devops/k8s/k8s_container/#container","text":"","title":"Container"},{"location":"blog/devops/k8s/k8s_container/#imageskubernetes","text":"","title":"Images|Kubernetes"},{"location":"blog/devops/k8s/kubernates_cmds/","text":"Kubernates cmds \u2693\ufe0e kubectl edit configmap kubectl get configmap kubectl get pods -w kubectl logs carmd-el-broussel cdn cgit elasticsearch farm-control gerrit git jenkins-artifacts kibana kubectl logstash mongodb rabbitmq redis swicwe -P journalctl -u gobi-drivers -f date","title":"Kubernates cmds"},{"location":"blog/devops/k8s/kubernates_cmds/#kubernates-cmds","text":"kubectl edit configmap kubectl get configmap kubectl get pods -w kubectl logs carmd-el-broussel cdn cgit elasticsearch farm-control gerrit git jenkins-artifacts kibana kubectl logstash mongodb rabbitmq redis swicwe -P journalctl -u gobi-drivers -f date","title":"Kubernates cmds"},{"location":"blog/devops/tools/_tools_intro/","text":"List of tools \u2693\ufe0e Basic tools \u2693\ufe0e pytest Docker Documentation Jenkins Advanced tools \u2693\ufe0e Kubernetes Documentation Elastic Stack and Product Documentation Kibana Guide [7.8] Grafana documentation","title":"Tools"},{"location":"blog/devops/tools/_tools_intro/#list-of-tools","text":"","title":"List of tools"},{"location":"blog/devops/tools/_tools_intro/#basic-tools","text":"pytest Docker Documentation Jenkins","title":"Basic tools"},{"location":"blog/devops/tools/_tools_intro/#advanced-tools","text":"Kubernetes Documentation Elastic Stack and Product Documentation Kibana Guide [7.8] Grafana documentation","title":"Advanced tools"},{"location":"blog/devops/tools/docker/","text":"Docker \u2693\ufe0e A Docker Tutorial for Beginners Docker cleanup Dockerfile \u2693\ufe0e Multistage build for production and development images \u2693\ufe0e Best practices Keywords/commands \u2693\ufe0e .dockerignore: file ignore files in the context From : a new build stage and sets the base image. RUN : Execute commands in a new year on top of current image. CMD : the defaults for an executing container. exec, shell, Entrypoint default form. ENTRYPOINT : exec or shell form. LABEL : Add metadata to a image. EXPOSE: container listens on ports and protocols. Default TCP. ENV : environment variable in the following commands. ADD : Add files from the source new files, directories or remote file URLs COPY : takes in a src and destination Add or COPY VOLUME: create a mount point and marks it as externally mounted volume in the host USER: set user access group. WORKDIR: set the working directory for RUN, CMD, ENTRYPOINT, COPY and ADD. ARG: intention - update dockerfile if this arguments changed. ONBUILD: a trigger instruction to be executed at a later time STOPSIGNAL: system call signal that will be sent to the container to exit HEALTHCHECK: detect cases such as a web server that is stuck in an infinite loop and unable to handle new connections SHELL: Change default shell. Docker commands \u2693\ufe0e BUILD : use Dockerfile and a context(PATH or URL the set of files)","title":"Docker"},{"location":"blog/devops/tools/docker/#docker","text":"A Docker Tutorial for Beginners Docker cleanup","title":"Docker"},{"location":"blog/devops/tools/docker/#dockerfile","text":"","title":"Dockerfile"},{"location":"blog/devops/tools/docker/#multistage-build-for-production-and-development-images","text":"Best practices","title":"Multistage build for production and development images"},{"location":"blog/devops/tools/docker/#keywordscommands","text":".dockerignore: file ignore files in the context From : a new build stage and sets the base image. RUN : Execute commands in a new year on top of current image. CMD : the defaults for an executing container. exec, shell, Entrypoint default form. ENTRYPOINT : exec or shell form. LABEL : Add metadata to a image. EXPOSE: container listens on ports and protocols. Default TCP. ENV : environment variable in the following commands. ADD : Add files from the source new files, directories or remote file URLs COPY : takes in a src and destination Add or COPY VOLUME: create a mount point and marks it as externally mounted volume in the host USER: set user access group. WORKDIR: set the working directory for RUN, CMD, ENTRYPOINT, COPY and ADD. ARG: intention - update dockerfile if this arguments changed. ONBUILD: a trigger instruction to be executed at a later time STOPSIGNAL: system call signal that will be sent to the container to exit HEALTHCHECK: detect cases such as a web server that is stuck in an infinite loop and unable to handle new connections SHELL: Change default shell.","title":"Keywords/commands"},{"location":"blog/devops/tools/docker/#docker-commands","text":"BUILD : use Dockerfile and a context(PATH or URL the set of files)","title":"Docker commands"},{"location":"blog/devops/tools/gradle/","text":"Gradle note \u2693\ufe0e dependencies Converting from Maven to Gradle Could not find org.jenkins-ci.plugins.workflow:workflow-steps:2.22. Searched in the following locations: mavenCentral()","title":"Gradle note"},{"location":"blog/devops/tools/gradle/#gradle-note","text":"dependencies Converting from Maven to Gradle Could not find org.jenkins-ci.plugins.workflow:workflow-steps:2.22. Searched in the following locations: mavenCentral()","title":"Gradle note"},{"location":"blog/devops/tools/kubernates_cmds/","text":"Kubernates cmds \u2693\ufe0e kubectl edit configmap kubectl get configmap kubectl get pods -w kubectl logs carmd-el-broussel cdn cgit elasticsearch farm-control gerrit git jenkins-artifacts kibana kubectl logstash mongodb rabbitmq redis swicwe -P journalctl -u gobi-drivers -f date","title":"Kubernates cmds"},{"location":"blog/devops/tools/kubernates_cmds/#kubernates-cmds","text":"kubectl edit configmap kubectl get configmap kubectl get pods -w kubectl logs carmd-el-broussel cdn cgit elasticsearch farm-control gerrit git jenkins-artifacts kibana kubectl logstash mongodb rabbitmq redis swicwe -P journalctl -u gobi-drivers -f date","title":"Kubernates cmds"},{"location":"blog/docs/","text":"Intro \u2693\ufe0e Technical documentation is the first impression for customer/users. Docs tool \u2693\ufe0e MkDocs Mkdosc Material Google Material Design Markdown \u2693\ufe0e Easier to write and use across different platforms.","title":"Docs"},{"location":"blog/docs/#intro","text":"Technical documentation is the first impression for customer/users.","title":"Intro"},{"location":"blog/docs/#docs-tool","text":"MkDocs Mkdosc Material Google Material Design","title":"Docs tool"},{"location":"blog/docs/#markdown","text":"Easier to write and use across different platforms.","title":"Markdown"},{"location":"blog/docs/markdown/maths/","text":"Markdown can support Latex grammer for symbol and math. Greek Letters Symbol Markdown txt Latex \\(\\alpha\\) $\\alpha$ \\alpha \\(\\beta\\) $\\beta$ \\beta \\(\\gamma\\) $\\gamma$ \\gammma \\(\\Gamma\\) $\\Gamma$ \\Gammma \\(\\pi\\) $\\pi$ \\pi \\(\\Pi\\) $\\Pi$ \\Pi \\(\\phi\\) $\\phi$ \\phi \\(\\Phi\\) $\\Phi$ \\Phi \\(\\varphi\\) $\\varphi$ \\varphi \\(\\theta\\) $\\theta$ \\theta \\(\\Theta\\) $\\Theta$ \\Theta mkdocs plugin: MathJax More Reference: Writing Mathematic Fomulars in Markdown","title":"Math-Markdown"},{"location":"blog/programming/bash/","text":"Bash \u2693\ufe0e I/O Redirection","title":"Programming"},{"location":"blog/programming/bash/#bash","text":"I/O Redirection","title":"Bash"},{"location":"blog/programming/coding/","text":"Debugging \u2693\ufe0e Debugging book by David Agans \u201c9 indispensable rules for finding even the most elusive software and hardware problems.\u201d 1. Understand the system 2. Make it fail 3. Quit thinking and look 4. Divide and conquer 5. Change one thing at a time 6. Keep an audit trail 7. Check the plug 8. Get a fresh view 9. If you didn\u2019t fix it, it ain\u2019t fixed","title":"Coding"},{"location":"blog/programming/coding/#debugging","text":"Debugging book by David Agans \u201c9 indispensable rules for finding even the most elusive software and hardware problems.\u201d 1. Understand the system 2. Make it fail 3. Quit thinking and look 4. Divide and conquer 5. Change one thing at a time 6. Keep an audit trail 7. Check the plug 8. Get a fresh view 9. If you didn\u2019t fix it, it ain\u2019t fixed","title":"Debugging"},{"location":"blog/programming/php_acceleration/","text":"PHP Acceleration \u2693\ufe0e code optimization Opcode caching PHP Accelarator \u2693\ufe0e PHP cache(APC) eAccelerator XCache Zend Platform","title":"PHP Acceleration"},{"location":"blog/programming/php_acceleration/#php-acceleration","text":"code optimization Opcode caching","title":"PHP Acceleration"},{"location":"blog/programming/php_acceleration/#php-accelarator","text":"PHP cache(APC) eAccelerator XCache Zend Platform","title":"PHP Accelarator"},{"location":"blog/programming/golang/grammer/","text":"Golang\u2019s grammar Go\u2019s Declaration Syntax - Type after var name Go Programming session video from Google I/O","title":"Golang"},{"location":"blog/programming/golang/ultimate-go-language/","text":"O\u2019reilly Ultimate-Go-Programming Mechanical Sympathy Mental model","title":"Ultimate go language"},{"location":"blog/programming/python/SUMMARY/","text":"Table of contents \u2693\ufe0e Python3 Less knowledge Build-in \u2693\ufe0e Built-in Functions Built-in Constants Built-in Types Built-in Exceptioins Standard library modules \u2693\ufe0e Text Processing Services","title":"Python"},{"location":"blog/programming/python/SUMMARY/#table-of-contents","text":"Python3 Less knowledge","title":"Table of contents"},{"location":"blog/programming/python/SUMMARY/#build-in","text":"Built-in Functions Built-in Constants Built-in Types Built-in Exceptioins","title":"Build-in"},{"location":"blog/programming/python/SUMMARY/#standard-library-modules","text":"Text Processing Services","title":"Standard library modules"},{"location":"blog/programming/python/intro/","text":"Python3 Less knowledge \u2693\ufe0e The minimum python 3 knowledge and study guide","title":"Python3 Less knowledge"},{"location":"blog/programming/python/intro/#python3-less-knowledge","text":"The minimum python 3 knowledge and study guide","title":"Python3 Less knowledge"},{"location":"blog/programming/python/build-in/build-in-types/","text":"Built-in Types \u2693\ufe0e What are the categories of built-in types? numeric: int, float, complex abs() int() float() complext() divmod() pow() math.floor(x) math.ceil(x) round(x[, n]) iterator: zip \\(_\\*iterables_\\) iterator.__iter__() iterator.__next__() StopIteration generator : A function which returns a generator iterator yield sequence: list list comprehension, A.sort() and sorted() tuple range text sequence: class str and string methods str.count(sub[, start[, end]]) str.encode(encoding=\"utf-8\", errors=\"strict\") str.find(sub[, start[, end]]) str.format(*args, **kwargs) str.format_map(mapping) str.isalnum() if any is true c.isalpha(), c.isdecimal(), c.isdigit(), or c.isnumeric() str.isspace() str.istitle() str.lstrip() str.rstrip() str.strip([chars]) str.swapcase() str.split(sep=None, maxsplit=-1) str.rsplit(sep=None, maxsplit=-1) str.removeprefix(prefix, /) str.removesuffix(suffix, /) str.startswith(prefix[, start[, end]]) str.partition(sep) str.rpartition(sep) str.replace(old, new[, count]) str.lfind(sub[, start[, end]]) str.rfind(sub[, start[, end]]) str.splitlines([keepends]) str.title() str.translate(table) str.upper() str.lower() binary sequence: bytes , bytearray , memoryview set: set , frozenset mapping: dict and Dictionary view objects context manager: with generator s and the contextlib.contextmanager contextmanager.__enter__() contextmanager.__exit__(exc_type, exc_val, exc_tb) Other Built-in Types Modules Classes and Class Instances Functions Methods Code Objects Type Objects The Null Object The Ellipsis Object The NotImplemented Object Boolean Values Internal Objects Special Attributes","title":"Build in"},{"location":"blog/programming/python/build-in/build-in-types/#built-in-types","text":"What are the categories of built-in types? numeric: int, float, complex abs() int() float() complext() divmod() pow() math.floor(x) math.ceil(x) round(x[, n]) iterator: zip \\(_\\*iterables_\\) iterator.__iter__() iterator.__next__() StopIteration generator : A function which returns a generator iterator yield sequence: list list comprehension, A.sort() and sorted() tuple range text sequence: class str and string methods str.count(sub[, start[, end]]) str.encode(encoding=\"utf-8\", errors=\"strict\") str.find(sub[, start[, end]]) str.format(*args, **kwargs) str.format_map(mapping) str.isalnum() if any is true c.isalpha(), c.isdecimal(), c.isdigit(), or c.isnumeric() str.isspace() str.istitle() str.lstrip() str.rstrip() str.strip([chars]) str.swapcase() str.split(sep=None, maxsplit=-1) str.rsplit(sep=None, maxsplit=-1) str.removeprefix(prefix, /) str.removesuffix(suffix, /) str.startswith(prefix[, start[, end]]) str.partition(sep) str.rpartition(sep) str.replace(old, new[, count]) str.lfind(sub[, start[, end]]) str.rfind(sub[, start[, end]]) str.splitlines([keepends]) str.title() str.translate(table) str.upper() str.lower() binary sequence: bytes , bytearray , memoryview set: set , frozenset mapping: dict and Dictionary view objects context manager: with generator s and the contextlib.contextmanager contextmanager.__enter__() contextmanager.__exit__(exc_type, exc_val, exc_tb) Other Built-in Types Modules Classes and Class Instances Functions Methods Code Objects Type Objects The Null Object The Ellipsis Object The NotImplemented Object Boolean Values Internal Objects Special Attributes","title":"Built-in Types"},{"location":"blog/programming/python/build-in/built-in-constants/","text":"Built-in Constants \u2693\ufe0e False True None NotImplemented Ellipsis debug **** site \u2693\ufe0e quit(code=None) exit(code=None) copyright credits license \u2693\ufe0e","title":"Built-in Constants"},{"location":"blog/programming/python/build-in/built-in-constants/#built-in-constants","text":"False True None NotImplemented Ellipsis debug ****","title":"Built-in Constants"},{"location":"blog/programming/python/build-in/built-in-constants/#site","text":"quit(code=None) exit(code=None) copyright credits license","title":"site"},{"location":"blog/programming/python/build-in/built-in-constants/#_1","text":"","title":""},{"location":"blog/programming/python/build-in/built-in-exceptioins/","text":"Built-in Exceptioins \u2693\ufe0e Exception hierarchy \u2693\ufe0e BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- StopIteration +-- StopAsyncIteration +-- ArithmeticError | +-- FloatingPointError | +-- OverflowError | +-- ZeroDivisionError +-- AssertionError +-- AttributeError +-- BufferError +-- EOFError +-- ImportError | +-- ModuleNotFoundError +-- LookupError | +-- IndexError | +-- KeyError +-- MemoryError +-- NameError | +-- UnboundLocalError +-- OSError | +-- BlockingIOError | +-- ChildProcessError | +-- ConnectionError | | +-- BrokenPipeError | | +-- ConnectionAbortedError | | +-- ConnectionRefusedError | | +-- ConnectionResetError | +-- FileExistsError | +-- FileNotFoundError | +-- InterruptedError | +-- IsADirectoryError | +-- NotADirectoryError | +-- PermissionError | +-- ProcessLookupError | +-- TimeoutError +-- ReferenceError +-- RuntimeError | +-- NotImplementedError | +-- RecursionError +-- SyntaxError | +-- IndentationError | +-- TabError +-- SystemError +-- TypeError +-- ValueError | +-- UnicodeError | +-- UnicodeDecodeError | +-- UnicodeEncodeError | +-- UnicodeTranslateError +-- Warning +-- DeprecationWarning +-- PendingDeprecationWarning +-- RuntimeWarning +-- SyntaxWarning +-- UserWarning +-- FutureWarning +-- ImportWarning +-- UnicodeWarning +-- BytesWarning +-- ResourceWarning Warning Categories Class Description Warning This is the base class of all warning category classes. It is a subclass of Exception . UserWarning The default category for warn() . DeprecationWarning Base category for warnings about deprecated features when those warnings are intended for other Python developers \\(ignored by default, unless triggered by code in __main__ \\) . SyntaxWarning Base category for warnings about dubious syntactic features. RuntimeWarning Base category for warnings about dubious runtime features. FutureWarning Base category for warnings about deprecated features when those warnings are intended for end users of applications that are written in Python. PendingDeprecationWarning Base category for warnings about features that will be deprecated in the future \\(ignored by default\\) . ImportWarning Base category for warnings triggered during the process of importing a module \\(ignored by default\\) . UnicodeWarning Base category for warnings related to Unicode. BytesWarning Base category for warnings related to bytes and bytearray . ResourceWarning Base category for warnings related to resource usage.","title":"Built-in Exceptioins"},{"location":"blog/programming/python/build-in/built-in-exceptioins/#built-in-exceptioins","text":"","title":"Built-in Exceptioins"},{"location":"blog/programming/python/build-in/built-in-exceptioins/#exception-hierarchy","text":"BaseException +-- SystemExit +-- KeyboardInterrupt +-- GeneratorExit +-- Exception +-- StopIteration +-- StopAsyncIteration +-- ArithmeticError | +-- FloatingPointError | +-- OverflowError | +-- ZeroDivisionError +-- AssertionError +-- AttributeError +-- BufferError +-- EOFError +-- ImportError | +-- ModuleNotFoundError +-- LookupError | +-- IndexError | +-- KeyError +-- MemoryError +-- NameError | +-- UnboundLocalError +-- OSError | +-- BlockingIOError | +-- ChildProcessError | +-- ConnectionError | | +-- BrokenPipeError | | +-- ConnectionAbortedError | | +-- ConnectionRefusedError | | +-- ConnectionResetError | +-- FileExistsError | +-- FileNotFoundError | +-- InterruptedError | +-- IsADirectoryError | +-- NotADirectoryError | +-- PermissionError | +-- ProcessLookupError | +-- TimeoutError +-- ReferenceError +-- RuntimeError | +-- NotImplementedError | +-- RecursionError +-- SyntaxError | +-- IndentationError | +-- TabError +-- SystemError +-- TypeError +-- ValueError | +-- UnicodeError | +-- UnicodeDecodeError | +-- UnicodeEncodeError | +-- UnicodeTranslateError +-- Warning +-- DeprecationWarning +-- PendingDeprecationWarning +-- RuntimeWarning +-- SyntaxWarning +-- UserWarning +-- FutureWarning +-- ImportWarning +-- UnicodeWarning +-- BytesWarning +-- ResourceWarning Warning Categories Class Description Warning This is the base class of all warning category classes. It is a subclass of Exception . UserWarning The default category for warn() . DeprecationWarning Base category for warnings about deprecated features when those warnings are intended for other Python developers \\(ignored by default, unless triggered by code in __main__ \\) . SyntaxWarning Base category for warnings about dubious syntactic features. RuntimeWarning Base category for warnings about dubious runtime features. FutureWarning Base category for warnings about deprecated features when those warnings are intended for end users of applications that are written in Python. PendingDeprecationWarning Base category for warnings about features that will be deprecated in the future \\(ignored by default\\) . ImportWarning Base category for warnings triggered during the process of importing a module \\(ignored by default\\) . UnicodeWarning Base category for warnings related to Unicode. BytesWarning Base category for warnings related to bytes and bytearray . ResourceWarning Base category for warnings related to resource usage.","title":"Exception hierarchy"},{"location":"blog/programming/python/build-in/built-in-functions/","text":"Built-in Functions \u2693\ufe0e Python Built-in Functions Categories \u2693\ufe0e Math programming data Functional Object abs() breakpoint() bytearray() filter() isinstance() complex() callable() bytes() map() issubclass() divmod() classmethod() chr() zip() len() float() compile() dict() iter() object() round() delattr() enumerate() property() sum() dir() frozenset() Algorithm repr() max() exec() tuple() reversed() setattr() min() eval() list() sorted() staticmethod() oct() format() memoryview() str() bin() getattr() next() I/O type() hex() globals() open() input() super() pow() hasattr() range() print() vars() hash() set() logic help() slice() bool() id() ascii() any() locals() ord() all() __import__() int()","title":"Built-in Functions"},{"location":"blog/programming/python/build-in/built-in-functions/#built-in-functions","text":"","title":"Built-in Functions"},{"location":"blog/programming/python/build-in/built-in-functions/#python-built-in-functions-categories","text":"Math programming data Functional Object abs() breakpoint() bytearray() filter() isinstance() complex() callable() bytes() map() issubclass() divmod() classmethod() chr() zip() len() float() compile() dict() iter() object() round() delattr() enumerate() property() sum() dir() frozenset() Algorithm repr() max() exec() tuple() reversed() setattr() min() eval() list() sorted() staticmethod() oct() format() memoryview() str() bin() getattr() next() I/O type() hex() globals() open() input() super() pow() hasattr() range() print() vars() hash() set() logic help() slice() bool() id() ascii() any() locals() ord() all() __import__() int()","title":"Python Built-in Functions Categories"},{"location":"blog/programming/python/standard-library-modules/text-processing-services/","text":"Text Processing Services \u2693\ufe0e Text Processing Services string \u2014 Common string operations re \u2014 Regular expression operations difflib \u2014 Helpers for computing deltas textwrap \u2014 Text wrapping and filling unicodedata \u2014 Unicode Database stringprep \u2014 Internet String Preparation readline \u2014 GNU readline interface rlcompleter \u2014 Completion function for GNU readline","title":"Text Processing Services"},{"location":"blog/programming/python/standard-library-modules/text-processing-services/#text-processing-services","text":"Text Processing Services string \u2014 Common string operations re \u2014 Regular expression operations difflib \u2014 Helpers for computing deltas textwrap \u2014 Text wrapping and filling unicodedata \u2014 Unicode Database stringprep \u2014 Internet String Preparation readline \u2014 GNU readline interface rlcompleter \u2014 Completion function for GNU readline","title":"Text Processing Services"},{"location":"blog/system_design/CD/","text":"Continuous Delivery \u2693\ufe0e Blue-Green Deployment \u2693\ufe0e Intro to blue-green, canary, and rolling deployments on OpenShift | Opensource.com Using Blue-Green Deployment to Reduce Downtime and Risk Deployment patterns - Octopus Deploy","title":"System design"},{"location":"blog/system_design/CD/#continuous-delivery","text":"","title":"Continuous Delivery"},{"location":"blog/system_design/CD/#blue-green-deployment","text":"Intro to blue-green, canary, and rolling deployments on OpenShift | Opensource.com Using Blue-Green Deployment to Reduce Downtime and Risk Deployment patterns - Octopus Deploy","title":"Blue-Green Deployment"},{"location":"blog/system_design/caching/","text":"Caching \u2693\ufe0e .html MySQL Query Cache memcached Redis","title":"Caching"},{"location":"blog/system_design/caching/#caching","text":".html MySQL Query Cache memcached Redis","title":"Caching"},{"location":"blog/system_design/cdn/","text":"CDN \u2693\ufe0e Static files such as HTML/CSS/JS, photos, and videos are served from CDN The Differences Between Push And Pull CDNs Push CDNs \u2693\ufe0e You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN. Pull CDNs \u2693\ufe0e Pull CDNs grab new content from your server when the first user requests the content.","title":"CDN"},{"location":"blog/system_design/cdn/#cdn","text":"Static files such as HTML/CSS/JS, photos, and videos are served from CDN The Differences Between Push And Pull CDNs","title":"CDN"},{"location":"blog/system_design/cdn/#push-cdns","text":"You take full responsibility for providing content, uploading directly to the CDN and rewriting URLs to point to the CDN.","title":"Push CDNs"},{"location":"blog/system_design/cdn/#pull-cdns","text":"Pull CDNs grab new content from your server when the first user requests the content.","title":"Pull CDNs"},{"location":"blog/system_design/consistency_vs_availability/","text":"Consistency vs Availability \u2693\ufe0e Consistency \u2693\ufe0e Week consistency \u2693\ufe0e After a W, R may or may not see it. VoIP, video chat, realtime Memcached Eventual Consistency - Data is replicated asynchronously. \u2693\ufe0e Highly available systems. After a W, R will eventually see it. Email or DNS. Strong consistency - transaction based systems. \u2693\ufe0e After W, R will see it. file systems and RDBMSes. Google I/O 2009 - Transactions Across Datacenters.. - YouTube Availability \u2693\ufe0e Fail-over \u2693\ufe0e Active-passive (master-slave) failover \u2693\ufe0e Active-active (master-master) failover \u2693\ufe0e Potential data loss Replication \u2693\ufe0e Database. Master-Slave Master-Master","title":"Consistency vs Availability"},{"location":"blog/system_design/consistency_vs_availability/#consistency-vs-availability","text":"","title":"Consistency vs Availability"},{"location":"blog/system_design/consistency_vs_availability/#consistency","text":"","title":"Consistency"},{"location":"blog/system_design/consistency_vs_availability/#week-consistency","text":"After a W, R may or may not see it. VoIP, video chat, realtime Memcached","title":"Week consistency"},{"location":"blog/system_design/consistency_vs_availability/#eventual-consistency---data-is-replicated-asynchronously","text":"Highly available systems. After a W, R will eventually see it. Email or DNS.","title":"Eventual Consistency - Data is replicated asynchronously."},{"location":"blog/system_design/consistency_vs_availability/#strong-consistency---transaction-based-systems","text":"After W, R will see it. file systems and RDBMSes. Google I/O 2009 - Transactions Across Datacenters.. - YouTube","title":"Strong consistency - transaction based systems."},{"location":"blog/system_design/consistency_vs_availability/#availability","text":"","title":"Availability"},{"location":"blog/system_design/consistency_vs_availability/#fail-over","text":"","title":"Fail-over"},{"location":"blog/system_design/consistency_vs_availability/#active-passive-master-slave-failover","text":"","title":"Active-passive (master-slave) failover"},{"location":"blog/system_design/consistency_vs_availability/#active-active-master-master-failover","text":"Potential data loss","title":"Active-active (master-master) failover"},{"location":"blog/system_design/consistency_vs_availability/#replication","text":"Database. Master-Slave Master-Master","title":"Replication"},{"location":"blog/system_design/dns/","text":"DNS \u2693\ufe0e Amazon R53 Traffic Flow: Latency Based Routing, Geo DNS, Geoproximity, Weighted Round Robin","title":"DNS"},{"location":"blog/system_design/dns/#dns","text":"Amazon R53 Traffic Flow: Latency Based Routing, Geo DNS, Geoproximity, Weighted Round Robin","title":"DNS"},{"location":"blog/system_design/embedded_system/","text":"Embedded system \u2693\ufe0e Technical study \u2693\ufe0e EETimes_Embedded_2019_Embedded_Markets_Study Market study \u2693\ufe0e Embedded System Market Size, Share & Trends \\| Industry Report, 2020 2020 IT (Information Technology) Industry Trends Analysis \\| Business of Technology | CompTIA","title":"Embedded system"},{"location":"blog/system_design/embedded_system/#embedded-system","text":"","title":"Embedded system"},{"location":"blog/system_design/embedded_system/#technical-study","text":"EETimes_Embedded_2019_Embedded_Markets_Study","title":"Technical study"},{"location":"blog/system_design/embedded_system/#market-study","text":"Embedded System Market Size, Share & Trends \\| Industry Report, 2020 2020 IT (Information Technology) Industry Trends Analysis \\| Business of Technology | CompTIA","title":"Market study"},{"location":"blog/system_design/load_balancer/","text":"Load balancer: \u2693\ufe0e scalability \u2693\ufe0e Vertical(hardware) Scaling \u2693\ufe0e CPU: L2 Cache Disk: SATA SAS SSD PATA RAM: Horizontal scalling: \u2693\ufe0e Cheaper hardware Distributed backend server. Load balancer DNS return IP of load balancer. \u2693\ufe0e BIND: heuristic: round roubin policy. Caching: TTL 1 hrs. Storing sessions in load balancer. File server with the same session RAID drive \u2693\ufe0e RIAD0 : strip write for performance RAID1: two drives redundancy. RIAD10: Striping and redundancy 4 drives. RAID5:One drive can die RAID6:Any two drives can die. Robustness and redundancy. How to solve Downtime problem? \u2693\ufe0e replication issue. Software \u2693\ufe0e ELB HAProxy LVS Hardware \u2693\ufe0e Barracuda Cisco Citrix 100K F5 Sticky Sessions \u2693\ufe0e Layer 7 load balancing Shared Storage: \u2693\ufe0e FC, ISCSI, MySQL, NFS. Cookies in Load balancer. \u2693\ufe0e Storing the ID of the server in cookies Store big random number in the load balancer.","title":"Load balancer:"},{"location":"blog/system_design/load_balancer/#load-balancer","text":"","title":"Load balancer:"},{"location":"blog/system_design/load_balancer/#scalability","text":"","title":"scalability"},{"location":"blog/system_design/load_balancer/#verticalhardware-scaling","text":"CPU: L2 Cache Disk: SATA SAS SSD PATA RAM:","title":"Vertical(hardware) Scaling"},{"location":"blog/system_design/load_balancer/#horizontal-scalling","text":"Cheaper hardware Distributed backend server. Load balancer","title":"Horizontal scalling:"},{"location":"blog/system_design/load_balancer/#dns-return-ip-of-load-balancer","text":"BIND: heuristic: round roubin policy. Caching: TTL 1 hrs. Storing sessions in load balancer. File server with the same session","title":"DNS return IP of load balancer."},{"location":"blog/system_design/load_balancer/#raid-drive","text":"RIAD0 : strip write for performance RAID1: two drives redundancy. RIAD10: Striping and redundancy 4 drives. RAID5:One drive can die RAID6:Any two drives can die. Robustness and redundancy.","title":"RAID drive"},{"location":"blog/system_design/load_balancer/#how-to-solve-downtime-problem","text":"replication issue.","title":"How to solve Downtime problem?"},{"location":"blog/system_design/load_balancer/#software","text":"ELB HAProxy LVS","title":"Software"},{"location":"blog/system_design/load_balancer/#hardware","text":"Barracuda Cisco Citrix 100K F5","title":"Hardware"},{"location":"blog/system_design/load_balancer/#sticky-sessions","text":"Layer 7 load balancing","title":"Sticky Sessions"},{"location":"blog/system_design/load_balancer/#shared-storage","text":"FC, ISCSI, MySQL, NFS.","title":"Shared Storage:"},{"location":"blog/system_design/load_balancer/#cookies-in-load-balancer","text":"Storing the ID of the server in cookies Store big random number in the load balancer.","title":"Cookies in Load balancer."},{"location":"blog/system_design/replication/","text":"replication \u2693\ufe0e Master-Slave Master-Master Service tier architecture Load balancer: active-active active-passive Partition \u2693\ufe0e DNS: Geography based load balancing. Amazon Avalability Zone. TCP: 80 - Web 443 - SSL 23 - SSH VPN","title":"replication"},{"location":"blog/system_design/replication/#replication","text":"Master-Slave Master-Master Service tier architecture Load balancer: active-active active-passive","title":"replication"},{"location":"blog/system_design/replication/#partition","text":"DNS: Geography based load balancing. Amazon Avalability Zone. TCP: 80 - Web 443 - SSL 23 - SSH VPN","title":"Partition"},{"location":"blog/system_design/system_design/","text":"System design \u2693\ufe0e System design Tushar Roy System Design Introduction For Interview. [Design Data-intensive Applications]( Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems: Kleppmann, Martin: 9781449373320: Books - Amazon.ca ) Youtube system design http://highscalability.com/ Language specific questions, concurrency/parallellism Framework, django, spring, react, vue redis, celery, Introduction to the DOM","title":"System design"},{"location":"blog/system_design/system_design/#system-design","text":"System design Tushar Roy System Design Introduction For Interview. [Design Data-intensive Applications]( Designing Data-Intensive Applications: The Big Ideas Behind Reliable, Scalable, and Maintainable Systems: Kleppmann, Martin: 9781449373320: Books - Amazon.ca ) Youtube system design http://highscalability.com/ Language specific questions, concurrency/parallellism Framework, django, spring, react, vue redis, celery, Introduction to the DOM","title":"System design"},{"location":"blog/system_design/topic_lists/","text":"Topic Lists \u2693\ufe0e GitHub - donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards. Vertical scaling Horizontal scaling Caching Load balancing Database replication Database partitioning Clones Databases Caches Asynchronism Index of system design topics Resources: HiredInTech\u2019s Training Camp for Coding Interviews Amazon CTO: A Word on Scalability - All Things Distributed Typesafe CTO: Scalability, Availability & Stability Patterns","title":"Topic Lists"},{"location":"blog/system_design/topic_lists/#topic-lists","text":"GitHub - donnemartin/system-design-primer: Learn how to design large-scale systems. Prep for the system design interview. Includes Anki flashcards. Vertical scaling Horizontal scaling Caching Load balancing Database replication Database partitioning Clones Databases Caches Asynchronism Index of system design topics Resources: HiredInTech\u2019s Training Camp for Coding Interviews Amazon CTO: A Word on Scalability - All Things Distributed Typesafe CTO: Scalability, Availability & Stability Patterns","title":"Topic Lists"},{"location":"blog/web/REST/","text":"Understanding And Using REST APIs \u2014 Smashing Magazine","title":"Web"},{"location":"blog/web/_web_developer/","text":"Web developer Study \u2693\ufe0e Roadmap The 12 factor App","title":"Web developer Study"},{"location":"blog/web/_web_developer/#web-developer-study","text":"Roadmap The 12 factor App","title":"Web developer Study"},{"location":"blog/web/flask/","text":"","title":"Flask"},{"location":"blog/web/frontend/","text":"Learning \u2693\ufe0e \u5927\u524d\u7aef Groovy Grails Personal website \u2693\ufe0e https://github.com/kevwang/kevin-wang-app","title":"Learning"},{"location":"blog/web/frontend/#learning","text":"\u5927\u524d\u7aef Groovy Grails","title":"Learning"},{"location":"blog/web/frontend/#personal-website","text":"https://github.com/kevwang/kevin-wang-app","title":"Personal website"},{"location":"blog/web/github_page/","text":"Use github pages to store notes. \u2693\ufe0e Idea: To have markdown as the source, build the book, publish it either in github pages or gitbook. Deploy Gatsby Site GitHub - gatsbyjs/gatsby-starter-default: The default Gatsby starter Deploy a Gatsby Site on GitHub Pages for Free Deploy Gatsby website to GitHub Pages - DEV \ud83c\udf89 Creating my blog with Gatsby and Github Pages - DEV gatsby/examples/recipe-sourcing-markdown at master \u00b7 gatsbyjs/gatsby \u00b7 GitHub Deploying to GitHub Pages | Codecademy","title":"Use github pages to store notes."},{"location":"blog/web/github_page/#use-github-pages-to-store-notes","text":"Idea: To have markdown as the source, build the book, publish it either in github pages or gitbook. Deploy Gatsby Site GitHub - gatsbyjs/gatsby-starter-default: The default Gatsby starter Deploy a Gatsby Site on GitHub Pages for Free Deploy Gatsby website to GitHub Pages - DEV \ud83c\udf89 Creating my blog with Gatsby and Github Pages - DEV gatsby/examples/recipe-sourcing-markdown at master \u00b7 gatsbyjs/gatsby \u00b7 GitHub Deploying to GitHub Pages | Codecademy","title":"Use github pages to store notes."},{"location":"blog/web/web_application%26architecture/0.web_architecture/","text":"Web app and architecture \u2693\ufe0e Web Application & Software Architecture Architectural styles: client-server , peer to peer decentralized architecture , microservices Overview \u2693\ufe0e architects, developers and product owners study and discuss business requirements (Requirement Gathering & Analysis). Proof of Concept(POC) Software Tiers \u2693\ufe0e Tiers are logical separation of components in an application or a service. Not just code level, component level like database, UI, backend, message caching. web-architecture Single-Tier - UI, Backend business logic, DB in the same machine single-tier.jpeg Pros: no latency, data safety Cons: The business cannot control after software releases. Two-Tier - Client with UI and business logic, backend server includes DB. client-server-architecture.jpeg Pros: UI, application logic & DB all in different machines. Three-Tier - Client with UI, three-tier-architecture.jpeg N Tier > 3 components. Cache, Message queues for asynchronous behavior, load balancers. search server web microservice. Layers and Tiers \u2693\ufe0e web-layers.jpeg What\u2019s web architecture \u2693\ufe0e Multiple components like DB, message queue, cache, UI runs together to form an online service. web-architecture Client Server Architecture(request-response model) \u2693\ufe0e Client: presentation part of the application, HTML, JS, CSS. open-source technologies popular for writing the web-based user interface are ReactJS, AngularJS, VueJS, Jquery StackOverflow popular technology Client \u2693\ufe0e Thin client: just UI. No business logic. Just like a three-tier application. Thick(Fat) client: holds some business logic. Two-tier applications. Utility apps (docker registry), online games. client-types.jpeg Server \u2693\ufe0e Web servers means application servers. Other servers include proxy server, mail server, file server, virtual server. Server side rendering \u2693\ufe0e Render the UI on the backend and send it to the client. Communication \u2693\ufe0e HTTP protocol Stateless protocol. REST API \u2693\ufe0e REST stands for Representational State Transfer . It\u2019s a software architectural style for implementing web services. Web services implemented using the REST architectural style are known as the RESTful Web services. RESTful Web services allow the requesting systems to access and manipulate textual representations of Web resources by using a uniform and predefined set of stateless operations. REST-API.jpeg Stateless communication between client and server. REST Endpoint: url of a service. REST-API gateway. REST-Gateway.jpeg HTTP Push & Pull \u2693\ufe0e Clients use AJAX (Asynchronous JavaScript & XML) to send requests to the server in the HTTP Pull based mechanism. There are multiple technologies involved in the HTTP Push based mechanism such as: Ajax Long polling Web Sockets HTML5 Event Source Message Queues Streaming over HTTP ajex.jpeg AJAX uses an XMLHttpRequest (XHR) object for sending the requests to the server which is built-in the browser and uses JavaScript to update the HTML DOM AJAX is commonly used with the Jquery This dynamic technique of requesting information from the server after regular intervals is known as Polling . HTTP Pull-Push differences: http-push-pull.jpeg Persistent connection and heartbeat interceptors, which is resource intensive. Long opened connections can be implemented by multiple techniques such as Ajax Long Polling , Web Sockets , *Server-Sent Events * etc. Web sockets - bidirectional data flow \u2693\ufe0e messaging, chat applications, real-time social streams & browser-based massive multiplayer games which have quite a number of read writes in comparison to a regular web app The WebSocket API & Introducing WebSockets \u2013 Bringing Sockets to the Web Long Polling \u2693\ufe0e lies somewhere between Ajax & Web Sockets . instead of immediately returning the response, the server holds the response until it finds an update to be sent to the client. HTML5 Event Source API & Server Sent Events(SSE) \u2693\ufe0e Server-sent events - Web APIs | MDN SSE is ideal for scenarios such as a real-time feed like that of Twitter, displaying stock quotes on the UI, real-time notifications etc . HTML5 & a JavaScript Stream API \u2693\ufe0e Streams API concepts - Web APIs Client-Side Vs Server-Side Rendering \u2693\ufe0e We can use server-side rendering for the home page & for the other static content on our website & use client-side rendering for the dynamic pages.","title":"Web application&architecture"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#web-app-and-architecture","text":"Web Application & Software Architecture Architectural styles: client-server , peer to peer decentralized architecture , microservices","title":"Web app and architecture"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#overview","text":"architects, developers and product owners study and discuss business requirements (Requirement Gathering & Analysis). Proof of Concept(POC)","title":"Overview"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#software-tiers","text":"Tiers are logical separation of components in an application or a service. Not just code level, component level like database, UI, backend, message caching. web-architecture Single-Tier - UI, Backend business logic, DB in the same machine single-tier.jpeg Pros: no latency, data safety Cons: The business cannot control after software releases. Two-Tier - Client with UI and business logic, backend server includes DB. client-server-architecture.jpeg Pros: UI, application logic & DB all in different machines. Three-Tier - Client with UI, three-tier-architecture.jpeg N Tier > 3 components. Cache, Message queues for asynchronous behavior, load balancers. search server web microservice.","title":"Software Tiers"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#layers-and-tiers","text":"web-layers.jpeg","title":"Layers and Tiers"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#whats-web-architecture","text":"Multiple components like DB, message queue, cache, UI runs together to form an online service. web-architecture","title":"What's web architecture"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#client-server-architecturerequest-response-model","text":"Client: presentation part of the application, HTML, JS, CSS. open-source technologies popular for writing the web-based user interface are ReactJS, AngularJS, VueJS, Jquery StackOverflow popular technology","title":"Client Server Architecture(request-response model)"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#client","text":"Thin client: just UI. No business logic. Just like a three-tier application. Thick(Fat) client: holds some business logic. Two-tier applications. Utility apps (docker registry), online games. client-types.jpeg","title":"Client"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#server","text":"Web servers means application servers. Other servers include proxy server, mail server, file server, virtual server.","title":"Server"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#server-side-rendering","text":"Render the UI on the backend and send it to the client.","title":"Server side rendering"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#communication","text":"HTTP protocol Stateless protocol.","title":"Communication"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#rest-api","text":"REST stands for Representational State Transfer . It\u2019s a software architectural style for implementing web services. Web services implemented using the REST architectural style are known as the RESTful Web services. RESTful Web services allow the requesting systems to access and manipulate textual representations of Web resources by using a uniform and predefined set of stateless operations. REST-API.jpeg Stateless communication between client and server. REST Endpoint: url of a service. REST-API gateway. REST-Gateway.jpeg","title":"REST API"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#http-push--pull","text":"Clients use AJAX (Asynchronous JavaScript & XML) to send requests to the server in the HTTP Pull based mechanism. There are multiple technologies involved in the HTTP Push based mechanism such as: Ajax Long polling Web Sockets HTML5 Event Source Message Queues Streaming over HTTP ajex.jpeg AJAX uses an XMLHttpRequest (XHR) object for sending the requests to the server which is built-in the browser and uses JavaScript to update the HTML DOM AJAX is commonly used with the Jquery This dynamic technique of requesting information from the server after regular intervals is known as Polling . HTTP Pull-Push differences: http-push-pull.jpeg Persistent connection and heartbeat interceptors, which is resource intensive. Long opened connections can be implemented by multiple techniques such as Ajax Long Polling , Web Sockets , *Server-Sent Events * etc.","title":"HTTP Push &amp; Pull"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#web-sockets---bidirectional-data-flow","text":"messaging, chat applications, real-time social streams & browser-based massive multiplayer games which have quite a number of read writes in comparison to a regular web app The WebSocket API & Introducing WebSockets \u2013 Bringing Sockets to the Web","title":"Web sockets - bidirectional data flow"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#long-polling","text":"lies somewhere between Ajax & Web Sockets . instead of immediately returning the response, the server holds the response until it finds an update to be sent to the client.","title":"Long Polling"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#html5-event-source-api--server-sent-eventssse","text":"Server-sent events - Web APIs | MDN SSE is ideal for scenarios such as a real-time feed like that of Twitter, displaying stock quotes on the UI, real-time notifications etc .","title":"HTML5 Event Source API &amp; Server Sent Events(SSE)"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#html5--a-javascript-stream-api","text":"Streams API concepts - Web APIs","title":"HTML5 &amp; a JavaScript Stream API"},{"location":"blog/web/web_application%26architecture/0.web_architecture/#client-side-vs-server-side-rendering","text":"We can use server-side rendering for the home page & for the other static content on our website & use client-side rendering for the dynamic pages.","title":"Client-Side Vs Server-Side Rendering"},{"location":"blog/web/web_application%26architecture/1.scalability/","text":"Scalability \u2693\ufe0e the ability of the application to handle & withstand increased workload without sacrificing the latency. scalability.jpeg Latency is the amount of time a system takes to respond to a user request. This latency is generally divided into two parts: Network Latency - CDN to cut down. Application Latency - stress & load tests and refactor the bottleneck. latency.jpeg Type of scalatility \u2693\ufe0e Vertical Scaling - hardware scale up. vertical-scale.jpeg Horizontal Scaling - server scale out. horizontal-scale.jpeg Cloud Elasticity \u2693\ufe0e Scale up & down danamically. micro-service-scale.jpeg Scalability approach \u2693\ufe0e No static instances in the class. Static instances hold application data & if a particular server goes down all the static data/state is lost. Development teams today are adopting a distributed micro-services architecture right from the start & the workloads are meant to be deployed on the cloud. So, inherently the workloads are horizontally scaled out on the fly. Primary bottlenecks \u2693\ufe0e application architecture: not using asynchronous processes & modules where ever required rather all the processes are scheduled sequentially. Not using caching via several layers Database: database partitioning, sharding, use multiple database servers to make the module efficient. Having Business logic in DB Not right DB : transactions & strong consistency for Relational DB. horizontal scalability on the fly pick a NoSQL database Code level: unnecessary loops, nested loops, tightly coupled code, Big-O complexity How to improve & Test scalability? \u2693\ufe0e Performance tunning Profiling for concurrency errors, memory errors, robustness, safety Caching CDN Data compression Avoid unnecessary Client-Server requests. Testing the scalability \u2693\ufe0e Different system parameters are taken into account such as the CPU usage, network bandwidth consumption, throughput, the number of requests processed within a stipulated time, latency, memory usage of the program, end-user experience when the system is under heavy load etc. JMeter to load & stress tests. how production engineers support global events on Facebook. how Hotstar a video streaming service scaled with over 10 million concurrent users Cadvisor , Prometheus and Grafana to tracking the system. dashboard-monitoring.jpeg read more about the pre-production monitoring.","title":"Scalability"},{"location":"blog/web/web_application%26architecture/1.scalability/#scalability","text":"the ability of the application to handle & withstand increased workload without sacrificing the latency. scalability.jpeg Latency is the amount of time a system takes to respond to a user request. This latency is generally divided into two parts: Network Latency - CDN to cut down. Application Latency - stress & load tests and refactor the bottleneck. latency.jpeg","title":"Scalability"},{"location":"blog/web/web_application%26architecture/1.scalability/#type-of-scalatility","text":"Vertical Scaling - hardware scale up. vertical-scale.jpeg Horizontal Scaling - server scale out. horizontal-scale.jpeg","title":"Type of scalatility"},{"location":"blog/web/web_application%26architecture/1.scalability/#cloud-elasticity","text":"Scale up & down danamically. micro-service-scale.jpeg","title":"Cloud Elasticity"},{"location":"blog/web/web_application%26architecture/1.scalability/#scalability-approach","text":"No static instances in the class. Static instances hold application data & if a particular server goes down all the static data/state is lost. Development teams today are adopting a distributed micro-services architecture right from the start & the workloads are meant to be deployed on the cloud. So, inherently the workloads are horizontally scaled out on the fly.","title":"Scalability approach"},{"location":"blog/web/web_application%26architecture/1.scalability/#primary-bottlenecks","text":"application architecture: not using asynchronous processes & modules where ever required rather all the processes are scheduled sequentially. Not using caching via several layers Database: database partitioning, sharding, use multiple database servers to make the module efficient. Having Business logic in DB Not right DB : transactions & strong consistency for Relational DB. horizontal scalability on the fly pick a NoSQL database Code level: unnecessary loops, nested loops, tightly coupled code, Big-O complexity","title":"Primary bottlenecks"},{"location":"blog/web/web_application%26architecture/1.scalability/#how-to-improve--test-scalability","text":"Performance tunning Profiling for concurrency errors, memory errors, robustness, safety Caching CDN Data compression Avoid unnecessary Client-Server requests.","title":"How to improve &amp; Test scalability?"},{"location":"blog/web/web_application%26architecture/1.scalability/#testing-the-scalability","text":"Different system parameters are taken into account such as the CPU usage, network bandwidth consumption, throughput, the number of requests processed within a stipulated time, latency, memory usage of the program, end-user experience when the system is under heavy load etc. JMeter to load & stress tests. how production engineers support global events on Facebook. how Hotstar a video streaming service scaled with over 10 million concurrent users Cadvisor , Prometheus and Grafana to tracking the system. dashboard-monitoring.jpeg read more about the pre-production monitoring.","title":"Testing the scalability"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/","text":"High Availability \u2693\ufe0e Fault tolerance \u2693\ufe0e Fault tolerance is the ability of the system to stay up despite taking hits. Failure reasons: \u2693\ufe0e Software crashes Hardware Failures Human errors This is an interesting read . Planned Downtown: maintenance operations, software, hardware upgrade. Fail soft :A few of the instances/nodes , out of several, running the service go offline & bounce back all the time. In case of these internal failures, the system could work at a reduced level but it will not go down entirely. Highly Available Fault-Tolerant Service. the entire massive service is architecturally broken down into smaller loosely coupled services called the micro-services micro-service-scale.jpeg Redundancy \u2693\ufe0e Active-Passive HA Mode \u2693\ufe0e high-availability.jpeg GPS, aircrafts, communication satellites which have zero downtime. The availability of these systems is ensured by making the components redundant. Single point failure: Distributed systems \u2693\ufe0e Monitoring & Automation - to cut down human errors \u2693\ufe0e Replication \u2693\ufe0e Active-Active High Availability \u2693\ufe0e HA-replication.jpeg Geographical Distribution of Workload \u2693\ufe0e High Availability Clustering \u2693\ufe0e A High Availability cluster also known as the Fail-Over cluster contains a set of nodes running in conjunction with each other that ensures high availability of the service. Heartbeat network monitors the health. A single state across all the nodes in a cluster is achieved with the help of a shared distributed memory & a distributed co-ordination service like the Zookeeper . HA-cluster.jpeg e.g. Jenkins master and clients. Disk mirroring/RAID Redundant Array Of Independent Disks , redundant network connections, redundant electrical power Which of the following statements is true in context to scalability & high availability? Scaling an application horizontally means getting rid of single points of failure & that means the application also becomes highly available.","title":"High Availability"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#high-availability","text":"","title":"High Availability"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#fault-tolerance","text":"Fault tolerance is the ability of the system to stay up despite taking hits.","title":"Fault tolerance"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#failure-reasons","text":"Software crashes Hardware Failures Human errors This is an interesting read . Planned Downtown: maintenance operations, software, hardware upgrade. Fail soft :A few of the instances/nodes , out of several, running the service go offline & bounce back all the time. In case of these internal failures, the system could work at a reduced level but it will not go down entirely. Highly Available Fault-Tolerant Service. the entire massive service is architecturally broken down into smaller loosely coupled services called the micro-services micro-service-scale.jpeg","title":"Failure reasons:"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#redundancy","text":"","title":"Redundancy"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#active-passive-ha-mode","text":"high-availability.jpeg GPS, aircrafts, communication satellites which have zero downtime. The availability of these systems is ensured by making the components redundant.","title":"Active-Passive HA Mode"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#single-point-failure-distributed-systems","text":"","title":"Single point failure: Distributed systems"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#monitoring--automation---to-cut-down-human-errors","text":"","title":"Monitoring &amp; Automation - to cut down human errors"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#replication","text":"","title":"Replication"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#active-active-high-availability","text":"HA-replication.jpeg","title":"Active-Active High Availability"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#geographical-distribution-of-workload","text":"","title":"Geographical Distribution of Workload"},{"location":"blog/web/web_application%26architecture/2.high_availabilty/#high-availability-clustering","text":"A High Availability cluster also known as the Fail-Over cluster contains a set of nodes running in conjunction with each other that ensures high availability of the service. Heartbeat network monitors the health. A single state across all the nodes in a cluster is achieved with the help of a shared distributed memory & a distributed co-ordination service like the Zookeeper . HA-cluster.jpeg e.g. Jenkins master and clients. Disk mirroring/RAID Redundant Array Of Independent Disks , redundant network connections, redundant electrical power Which of the following statements is true in context to scalability & high availability? Scaling an application horizontally means getting rid of single points of failure & that means the application also becomes highly available.","title":"High Availability Clustering"},{"location":"blog/web/web_application%26architecture/3.load_balancing/","text":"","title":"3.load balancing"},{"location":"blog/web/web_application%26architecture/4.db/","text":"Database \u2693\ufe0e Date type \u2693\ufe0e Structured data - normalized fasion. \u2693\ufe0e normalized data means a unique entity occurs in only one place/table, in its simplest and atomic form and is not spread throughout the database. Unstractured Data \u2693\ufe0e User state \u2693\ufe0e Relational DB \u2693\ufe0e Transactions & Data Consistency \u2693\ufe0e ACID \u2013 Atomicity, Consistency, Isolation, Durability . Storing Relationships \u2693\ufe0e Relational databases are built to store relationships. Facebook as the main user-facing database. MySQL , PostgreSQL , MariaDB , Amazon Aurora , Google Cloud SQL NoSQL Databases \u2693\ufe0e JSON-based databases for frequency read & writes, typically required in social applications like Twitter, LIVE real-time sports apps, online massive multi-player games etc. Why no-sql needed from relational DB? \u2693\ufe0e Scalability \u2693\ufe0e Scaling SQL databases is something which is not trivial. They have to be Sharded or Replicated to make them run smoothly on a cluster NoSQL databases have the ability to add new server nodes on the fly & continue the work, Clustering \u2693\ufe0e the server nodes even have self-healing capabilities. Features \u2693\ufe0e Pro \u2693\ufe0e Gentle Learning Curve \u2693\ufe0e Schemaless \u2693\ufe0e Cons \u2693\ufe0e Inconsistency \u2693\ufe0e No ACID \u2693\ufe0e MongoDB , Redis , Neo4J , Cassandra , Google Cloud Datastore When to use? \u2693\ufe0e Handling A Large Number Of Read Write Operations \u2693\ufe0e Since they have the ability to add nodes on the fly, they can handle more concurrent traffic & big amount of data with minimal latency. Flexibility With Data Modeling \u2693\ufe0e Eventual Consistency Over Strong Consistency \u2693\ufe0e Running Data Analytics \u2693\ufe0e Database use cases Time-Series databases , * Wide-Column* - Cassandra or HBase , Document Oriented - ElasticSearch Key-value store - Redis or Memchache Is NoSQL more performant? \u2693\ufe0e MongoDB , ExpressJS , AngularJS/ReactJS , NodeJs pick NoSQL DB. Facebook uses MySQL for storing its social graph of millions of users. Quora uses MySQL by partitioning the data at the application level Polyglot Persistence to use both SQL and NoSQL. \u2693\ufe0e Facebook case study: \u2693\ufe0e facebook-db-example.jpeg Multi-Model Databases \u2693\ufe0e DB supports Graph , Document-Oriented , Relational e.g. Arango DB , Cosmos DB , Orient DB , *Couchbase * facebook-db-multi-node-example.jpeg Eventual consistency \u2693\ufe0e eventual-consistency.jpeg The upside of eventual consistency is that the system can add new nodes on the fly without the need to block any of them, the nodes are available to the end-users to make an update at all times. Strong consistency \u2693\ufe0e Locking down the nodes needs to be updated. strong-consistency.jpeg CAP theorem, queuing all the requests. ACID Trasaction support in the geographic zone. NoSQL for Highly Available and Scalable. Consitency, Availability, Partition tolerance(CAP) \u2693\ufe0e CAP theorem simply states that in case of a network failure , when a few of the nodes of the system are down, we have to make a choice between Availability & *Consistency * Types of Databases \u2693\ufe0e Document-Oriented database \u2693\ufe0e Popular MongoDB, CouchDB, OrientDB, Google Cloud Datastore, Amazon Document DB Use cases Real-time feeds Live sports apps Writing product catalogues Inventory management Storing user comments Web-based multiplayer games SEGA uses Mongo-DB to improve the experience for millions of mobile gamers Coinbase scaled from 15k requests per min to 1.2 million requests per minute with MongoDB Search Engines : Elasticsearch , Splunk , and Solr , Key-value datastore \u2693\ufe0e minimum latency to implement chaching. Popular . Redis , Hazelcast , Riak , Voldemort & Memcache . Caching Persisting user state Persisting user sessions Managing real-time data Implementing queues Creating leaderboards in online games & web apps Implementing a pub-sub system Inovonics uses Redis to drive real-time analytics on millions of sensor data Microsoft uses Redis to handle the traffic spike on its platforms Google Cloud uses Memcache to implement caching on their cloud platform Wide-column database \u2693\ufe0e primarily used to handle massive amounts of data, technically called the Big Data analytical use cases , ensuring scalability , performance & high availability at the same time. column-oriented databases wide-column databases store data in a record with a dynamic number of columns. A record can hold billions of columns Popular : Cassandra*, HBase , Google BigTable , Scylla DB Netflix uses Cassandra as the backend database for the streaming service Adobe uses HBase for processing large amounts of data Relational database \u2693\ufe0e Graph database \u2693\ufe0e Features: visualization Low latency: no need to join in SQL, just follow the edges. e.g. Google Maps Popular . Neo4J* Use cases: building social, knowledge, network graphs. Writing AI-based apps, recommendation engines, fraud analysis app, storing genetic data etc. graph-db.jpeg Walmart shows product recommendations to its customers in real-time using Neo4J graph database NASA uses Neo4J to store \u201clessons learned\u201d data from their previous missions to educate the scientists & engineers. Time-Series database \u2693\ufe0e optimized for tracking & persisting time series data Use cases: data from IoT devices, self-driving vehicles, industry sensors, social networks, stock market financial data Writing an autonomous trading platform which deals with changing stock prices in real-time etc fetching data from IoT devices. Managing data for running analytics & monitoring Primary usage : running analytics, deducing conclusions and making future business decisions looking at the results of the analytics. Popular : Influx DB*, Timescale DB , Prometheus IBM uses Influx DB to run analytics for real-time cognitive fraud detection Spiio uses Influx DB to remotely monitor vertical lining green walls & plant installations. Databases dedicated to mobile apps \u2693\ufe0e Five of the Most Popular Databases for Mobile Apps - Trigent Vantage The Types of Modern Databases | Alooma","title":"Database"},{"location":"blog/web/web_application%26architecture/4.db/#database","text":"","title":"Database"},{"location":"blog/web/web_application%26architecture/4.db/#date-type","text":"","title":"Date type"},{"location":"blog/web/web_application%26architecture/4.db/#structured-data---normalized-fasion","text":"normalized data means a unique entity occurs in only one place/table, in its simplest and atomic form and is not spread throughout the database.","title":"Structured data - normalized fasion."},{"location":"blog/web/web_application%26architecture/4.db/#unstractured-data","text":"","title":"Unstractured Data"},{"location":"blog/web/web_application%26architecture/4.db/#user-state","text":"","title":"User state"},{"location":"blog/web/web_application%26architecture/4.db/#relational-db","text":"","title":"Relational DB"},{"location":"blog/web/web_application%26architecture/4.db/#transactions--data-consistency","text":"ACID \u2013 Atomicity, Consistency, Isolation, Durability .","title":"Transactions &amp; Data Consistency"},{"location":"blog/web/web_application%26architecture/4.db/#storing-relationships","text":"Relational databases are built to store relationships. Facebook as the main user-facing database. MySQL , PostgreSQL , MariaDB , Amazon Aurora , Google Cloud SQL","title":"Storing Relationships"},{"location":"blog/web/web_application%26architecture/4.db/#nosql-databases","text":"JSON-based databases for frequency read & writes, typically required in social applications like Twitter, LIVE real-time sports apps, online massive multi-player games etc.","title":"NoSQL Databases"},{"location":"blog/web/web_application%26architecture/4.db/#why-no-sql-needed-from-relational-db","text":"","title":"Why no-sql needed from relational DB?"},{"location":"blog/web/web_application%26architecture/4.db/#scalability","text":"Scaling SQL databases is something which is not trivial. They have to be Sharded or Replicated to make them run smoothly on a cluster NoSQL databases have the ability to add new server nodes on the fly & continue the work,","title":"Scalability"},{"location":"blog/web/web_application%26architecture/4.db/#clustering","text":"the server nodes even have self-healing capabilities.","title":"Clustering"},{"location":"blog/web/web_application%26architecture/4.db/#features","text":"","title":"Features"},{"location":"blog/web/web_application%26architecture/4.db/#when-to-use","text":"","title":"When to use?"},{"location":"blog/web/web_application%26architecture/4.db/#is-nosql-more-performant","text":"MongoDB , ExpressJS , AngularJS/ReactJS , NodeJs pick NoSQL DB. Facebook uses MySQL for storing its social graph of millions of users. Quora uses MySQL by partitioning the data at the application level","title":"Is NoSQL more performant?"},{"location":"blog/web/web_application%26architecture/4.db/#multi-model-databases","text":"DB supports Graph , Document-Oriented , Relational e.g. Arango DB , Cosmos DB , Orient DB , *Couchbase * facebook-db-multi-node-example.jpeg","title":"Multi-Model Databases"},{"location":"blog/web/web_application%26architecture/4.db/#eventual-consistency","text":"eventual-consistency.jpeg The upside of eventual consistency is that the system can add new nodes on the fly without the need to block any of them, the nodes are available to the end-users to make an update at all times.","title":"Eventual consistency"},{"location":"blog/web/web_application%26architecture/4.db/#strong-consistency","text":"Locking down the nodes needs to be updated. strong-consistency.jpeg CAP theorem, queuing all the requests. ACID Trasaction support in the geographic zone. NoSQL for Highly Available and Scalable.","title":"Strong consistency"},{"location":"blog/web/web_application%26architecture/4.db/#consitency-availability-partition-tolerancecap","text":"CAP theorem simply states that in case of a network failure , when a few of the nodes of the system are down, we have to make a choice between Availability & *Consistency *","title":"Consitency, Availability, Partition tolerance(CAP)"},{"location":"blog/web/web_application%26architecture/4.db/#types-of-databases","text":"","title":"Types of Databases"},{"location":"blog/web/web_application%26architecture/4.db/#document-oriented-database","text":"Popular MongoDB, CouchDB, OrientDB, Google Cloud Datastore, Amazon Document DB Use cases Real-time feeds Live sports apps Writing product catalogues Inventory management Storing user comments Web-based multiplayer games SEGA uses Mongo-DB to improve the experience for millions of mobile gamers Coinbase scaled from 15k requests per min to 1.2 million requests per minute with MongoDB Search Engines : Elasticsearch , Splunk , and Solr ,","title":"Document-Oriented database"},{"location":"blog/web/web_application%26architecture/4.db/#key-value-datastore","text":"minimum latency to implement chaching. Popular . Redis , Hazelcast , Riak , Voldemort & Memcache . Caching Persisting user state Persisting user sessions Managing real-time data Implementing queues Creating leaderboards in online games & web apps Implementing a pub-sub system Inovonics uses Redis to drive real-time analytics on millions of sensor data Microsoft uses Redis to handle the traffic spike on its platforms Google Cloud uses Memcache to implement caching on their cloud platform","title":"Key-value datastore"},{"location":"blog/web/web_application%26architecture/4.db/#wide-column-database","text":"primarily used to handle massive amounts of data, technically called the Big Data analytical use cases , ensuring scalability , performance & high availability at the same time. column-oriented databases wide-column databases store data in a record with a dynamic number of columns. A record can hold billions of columns Popular : Cassandra*, HBase , Google BigTable , Scylla DB Netflix uses Cassandra as the backend database for the streaming service Adobe uses HBase for processing large amounts of data","title":"Wide-column database"},{"location":"blog/web/web_application%26architecture/4.db/#relational-database","text":"","title":"Relational database"},{"location":"blog/web/web_application%26architecture/4.db/#graph-database","text":"Features: visualization Low latency: no need to join in SQL, just follow the edges. e.g. Google Maps Popular . Neo4J* Use cases: building social, knowledge, network graphs. Writing AI-based apps, recommendation engines, fraud analysis app, storing genetic data etc. graph-db.jpeg Walmart shows product recommendations to its customers in real-time using Neo4J graph database NASA uses Neo4J to store \u201clessons learned\u201d data from their previous missions to educate the scientists & engineers.","title":"Graph database"},{"location":"blog/web/web_application%26architecture/4.db/#time-series-database","text":"optimized for tracking & persisting time series data Use cases: data from IoT devices, self-driving vehicles, industry sensors, social networks, stock market financial data Writing an autonomous trading platform which deals with changing stock prices in real-time etc fetching data from IoT devices. Managing data for running analytics & monitoring Primary usage : running analytics, deducing conclusions and making future business decisions looking at the results of the analytics. Popular : Influx DB*, Timescale DB , Prometheus IBM uses Influx DB to run analytics for real-time cognitive fraud detection Spiio uses Influx DB to remotely monitor vertical lining green walls & plant installations.","title":"Time-Series database"},{"location":"blog/web/web_application%26architecture/4.db/#databases-dedicated-to-mobile-apps","text":"Five of the Most Popular Databases for Mobile Apps - Trigent Vantage The Types of Modern Databases | Alooma","title":"Databases dedicated to mobile apps"},{"location":"blog/web/web_application%26architecture/5.cache/","text":"Caching \u2693\ufe0e Why?It ensures low latency and high throughput . caching.jpeg What? Disk-based -> RAM(Random Access Memory) Caching Dynamic Data \u2693\ufe0e It has expiry time or TTL. Cache invalidation to purse expired data. Caching static data. \u2693\ufe0e Images, Font files, CSS. Not changed often. CDNS Application architecture cache can be used. \u2693\ufe0e Caching-in-web.jpeg Prevent unnecessary network requests with the HTTP Cache cross-module communication in a microservices architecture by saving the shared data a backbone for the microservice communication . Used in in-memory data stream processing and running analytics . Case study: Deployment costs reduction \u2693\ufe0e Caching the writes in Memchae thendo a batch operations to update DB. (Write-back strategy) Caching strategies \u2693\ufe0e Cache Aside \u2693\ufe0e lazy-loaded , the cache works along with the database trying to reduce the hits on it as much as possible Read-Through \u2693\ufe0e the cache always stays consistent with the database. Write-Through \u2693\ufe0e each & every information written to the database goes through the cache. Before the data is written to the DB, the cache is updated with it. Write-Back \u2693\ufe0e In the Write-back caching strategy the data is directly written to the cache instead of the database. And the cache after some delay as per the business logic writes data to the database.","title":"Caching"},{"location":"blog/web/web_application%26architecture/5.cache/#caching","text":"Why?It ensures low latency and high throughput . caching.jpeg What? Disk-based -> RAM(Random Access Memory)","title":"Caching"},{"location":"blog/web/web_application%26architecture/5.cache/#caching-dynamic-data","text":"It has expiry time or TTL. Cache invalidation to purse expired data.","title":"Caching Dynamic Data"},{"location":"blog/web/web_application%26architecture/5.cache/#caching-static-data","text":"Images, Font files, CSS. Not changed often. CDNS","title":"Caching static data."},{"location":"blog/web/web_application%26architecture/5.cache/#application-architecture-cache-can-be-used","text":"Caching-in-web.jpeg Prevent unnecessary network requests with the HTTP Cache cross-module communication in a microservices architecture by saving the shared data a backbone for the microservice communication . Used in in-memory data stream processing and running analytics .","title":"Application architecture cache can be used."},{"location":"blog/web/web_application%26architecture/5.cache/#case-study-deployment-costs-reduction","text":"Caching the writes in Memchae thendo a batch operations to update DB. (Write-back strategy)","title":"Case study: Deployment costs reduction"},{"location":"blog/web/web_application%26architecture/5.cache/#caching-strategies","text":"","title":"Caching strategies"},{"location":"blog/web/web_application%26architecture/5.cache/#cache-aside","text":"lazy-loaded , the cache works along with the database trying to reduce the hits on it as much as possible","title":"Cache Aside"},{"location":"blog/web/web_application%26architecture/5.cache/#read-through","text":"the cache always stays consistent with the database.","title":"Read-Through"},{"location":"blog/web/web_application%26architecture/5.cache/#write-through","text":"each & every information written to the database goes through the cache. Before the data is written to the DB, the cache is updated with it.","title":"Write-Through"},{"location":"blog/web/web_application%26architecture/5.cache/#write-back","text":"In the Write-back caching strategy the data is directly written to the cache instead of the database. And the cache after some delay as per the business logic writes data to the database.","title":"Write-Back"},{"location":"blog/web/web_application%26architecture/6.message%20queues/","text":"\u2693\ufe0e Message Queues \u2693\ufe0e FIFO (First in First Out) A priority attached with them that makes the queue a priority queue From producer to consumer message-queue.jpeg Message queues facilitate asynchronous behaviour. Message queues are also used to implement notification systems just like Facebook notifications. Publish Subscribe Model \u2693\ufe0e Multiple consuemer receive the same message sent from a single or multiple producers. newspaper service message-queue-pub-sub.jpeg Exchanges Types: direct , topic , headers , *fanout * RabbitMQ The relationship between exchange and the queue is known as Binding . Point to Point Model \u2693\ufe0e Messaging protocols \u2693\ufe0e AMQP Advanced Message Queue Protocol & STOMP Simple or Streaming Text Oriented Message Protocol . Technologies: \u2693\ufe0e RabbitMQ , ActiveMQ , Apache Kafka , ZeroMQ Case study: notification systems&Real-time feeds \u2693\ufe0e How to implement this notifcation system? They involve machine learning, understanding the user behaviour, recommending new relevant information & integration of other modules with them Pull-based approach \u2693\ufe0e notifaction-pull-based.jpeg Two major issues: Polling DB too often Updates not real-time Push-based approach \u2693\ufe0e notifaction-push-based.jpeg","title":"6.message queues"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#_1","text":"","title":""},{"location":"blog/web/web_application%26architecture/6.message%20queues/#message-queues","text":"FIFO (First in First Out) A priority attached with them that makes the queue a priority queue From producer to consumer message-queue.jpeg Message queues facilitate asynchronous behaviour. Message queues are also used to implement notification systems just like Facebook notifications.","title":"Message Queues"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#publish-subscribe-model","text":"Multiple consuemer receive the same message sent from a single or multiple producers. newspaper service message-queue-pub-sub.jpeg Exchanges Types: direct , topic , headers , *fanout * RabbitMQ The relationship between exchange and the queue is known as Binding .","title":"Publish Subscribe Model"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#point-to-point-model","text":"","title":"Point to Point Model"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#messaging-protocols","text":"AMQP Advanced Message Queue Protocol & STOMP Simple or Streaming Text Oriented Message Protocol .","title":"Messaging protocols"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#technologies","text":"RabbitMQ , ActiveMQ , Apache Kafka , ZeroMQ","title":"Technologies:"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#case-study-notification-systemsreal-time-feeds","text":"How to implement this notifcation system? They involve machine learning, understanding the user behaviour, recommending new relevant information & integration of other modules with them","title":"Case study: notification systems&amp;Real-time feeds"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#pull-based-approach","text":"notifaction-pull-based.jpeg Two major issues: Polling DB too often Updates not real-time","title":"Pull-based approach"},{"location":"blog/web/web_application%26architecture/6.message%20queues/#push-based-approach","text":"notifaction-push-based.jpeg","title":"Push-based approach"},{"location":"blog/web/web_application%26architecture/7.stream_processing/","text":"Steam Processing \u2693\ufe0e Data Ingestion \u2693\ufe0e Data Ingestion is a collective term for the process of collecting data streaming-in from several different sources and making it ready to be processed by the system. Layers of Data Processing Setup \u2693\ufe0e (CPP+VSS) Data collection layer ( Data standardization ) Data preparation layer Data processing layer Data Analysis analytics models such as predictive modelling, statistical analytics, text analytics etc. Data visualization layer Kibana Data storage layer Data security layer data-ingestion.jpeg Ways of ingestion: \u2693\ufe0e Real-time : systems reading medical data like a heartbeat, blood pressure via wearable IoT sensors where the time is of critical importance; financial data like stock market events etc. Batches : estimating the popularity of a sport in a region over a period of time. Challenges: \u2693\ufe0e Conversion of data is tedious analytics information obtained from real-time processing is not that accurate & holistic since the analytics continually runs on a limited set of data as it streams as opposed to the batch processing approach which takes into account the entire data set. Lambda and the Kappa architectures of data processing Gobblin is a data ingestion tool by LinkedIn. At one point in time, LinkedIn had 15 data ingestion pipelines running which created several data management challenges. To tackle this problem, LinkedIn wrote Gobblin in-house. Gobblin Enters Apache Incubation | LinkedIn Engineering Use cases: \u2693\ufe0e Moving Big Data Into Hadoop \u2693\ufe0e Big Data from IoT devices, social apps, treams through data pipelines, moves into the most popular distributed data processing framework Hadoop for analysis & stuff. 15 IoT Big Data Examples You Should Know | Built In Streaming Data from Databases to Elasticsearch Server \u2693\ufe0e Java, String Boot & Elastic Search. Log Processing \u2693\ufe0e And logs are the only way to move back in time, track errors & study the behaviour of the system. Ingest logs to a central server: ELK Elastic LogStash Kibana stack Stream Processing Engines for Real-Time Events \u2693\ufe0e Message queues like Kafka , Stream computation frameworks like Apache Storm, Apache Nifi, Apache Spark, Samza, Kinesis etc are used to implement the real-time large-scale data processing features in online applications. Netflix\u2019s real-time streaming platform Data pipelines \u2693\ufe0e Data pipeline facilitate the efficient flow of data from one point to another & also enable the developers to apply filters on the data streaming-in in real-time. Features \u2693\ufe0e These ensure smooth flow of data. Enables the business to apply filters and business logic on streaming data. Avert any bottlenecks & redundancy in the data flow. Facilitate parallel processing of data. Avoid data being corrupted. The entire flow of data extraction, transformation, combination, validation, converging of data from multiple streams into one etc. is completely automated. Extract Transform Load.(ETL) \u2693\ufe0e Extract means fetching data from single or multiple data sources. Transform means transforming the extracted heterogeneous data into a standardized format based on the rules set by the business. Load means moving the transformed data to a data warehouse or another data storage location for further processing of data. ETL flow is done in batches, not real-time. Apache Flink , Storm , Spark , Kafka Migrating Batch ETL to Stream Processing: A Netflix Case Study with Kafka and Flink Distributed Data Processing \u2693\ufe0e Distributed data processing means diverging large amounts of data to several different nodes, running in a cluster, for parallel processing. Apache Zookeeper is a pretty popular, de-facto, node co-ordinator used in the industry. data-processing-distributed.jpeg Since the nodes are distributed and the tasks are executed parallelly, this makes the entire set-up pretty scalable & highly available . The workload can be scaled both horizontally & vertically. Data is made redundant & replicated across the cluster to avoid any sort of data loss. Distributed Data Processing Technologies \u2693\ufe0e MapReduce \u2013 Apache Hadoop \u2693\ufe0e MapReduce is a programming model written for managing distributed data processing across several different machines in a cluster, distributing tasks to several machines, running work in parallel, managing all the communication and data transfer within different parts of the system. The Map part of the programming model involves sorting the data based on a parameter and the Reduce part involves summarizing the sorted data. The most popular open-source implementation of the MapReduce programming model is Apache Hadoop . The framework is used by all big guns in the industry to manage massive amounts of data in their system. It is used by Twitter for running analytics. It is used by Facebook for storing big data. Apache Spark \u2693\ufe0e Apache Spark is an open-source cluster computing framework. It provides high performance for both batch & real-time in-stream processing. It can work with diverse data sources & facilitates parallel execution of work in a cluster. Spark has a cluster manager and distributed data storage. The cluster manager facilitates communication between different nodes running together in a cluster whereas the distributed storage facilitates storage of big data. Spark seamlessly integrates with distributed data stores like Cassandra, HDFS, MapReduce File System, Amazon S3 etc. Apache Storm # \u2693\ufe0e Apache Storm is a distributed stream processing framework. In the industry, it is primarily used for processing massive amounts of streaming data . It has several different use cases such as real-time analytics, machine learning, distributed remote procedure calls etc. Apache Kafka # \u2693\ufe0e Apache Kafka is an open-source distributed stream processing & messaging platform . It\u2019s written using Java & Scala & was developed by LinkedIn . The storage layer of Kafka involves a distributed scalable pub/sub message queue . It helps read & write streams of data like a messaging system. Kafka is used in the industry to develop real-time features such as notification platforms, managing streams of massive amounts of data, monitoring website activity & metrics, messaging, log aggregation . Hadoop is preferred for batch processing of data whereas Spark, Kafka & *Storm are preferred for processing real-time streaming * data. Lambda Architecture \u2693\ufe0e data-architecture-lambda.jpeg Batch processing does take time considering the massive amount of data businesses have today but with it the accuracy of the approach is high & the results are comprehensive. real-time streaming data processing provides quick access to insights Typically three layers \u2693\ufe0e Batch Layer - deals with the results acquired via batch processing the data Speed Layer - gets data from the real-time streaming data processing Serving layer - combines the results obtained from both the Batch & the Speed layers Kappa Architecture \u2693\ufe0e data-architecture-kappa.jpeg In Kappa architecture, all the data flows through a single data streaming pipeline as opposed to the Lambda architecture which has different data streaming layers that converge into one. Two Layers: \u2693\ufe0e Speed - streaming processing layer Serving Kappa is preferred if the batch and the streaming analytics results are fairly identical in a system. Lambda is preferred if they are not. Limitations \u2693\ufe0e a distributed system does not promise Strong Consistency of data. Not trivial to set up and manage a distributed data processing system, years of work.","title":"Steam Processing"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#steam-processing","text":"","title":"Steam Processing"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#data-ingestion","text":"Data Ingestion is a collective term for the process of collecting data streaming-in from several different sources and making it ready to be processed by the system.","title":"Data Ingestion"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#layers-of-data-processing-setup","text":"(CPP+VSS) Data collection layer ( Data standardization ) Data preparation layer Data processing layer Data Analysis analytics models such as predictive modelling, statistical analytics, text analytics etc. Data visualization layer Kibana Data storage layer Data security layer data-ingestion.jpeg","title":"Layers of Data Processing Setup"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#ways-of-ingestion","text":"Real-time : systems reading medical data like a heartbeat, blood pressure via wearable IoT sensors where the time is of critical importance; financial data like stock market events etc. Batches : estimating the popularity of a sport in a region over a period of time.","title":"Ways of ingestion:"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#challenges","text":"Conversion of data is tedious analytics information obtained from real-time processing is not that accurate & holistic since the analytics continually runs on a limited set of data as it streams as opposed to the batch processing approach which takes into account the entire data set. Lambda and the Kappa architectures of data processing Gobblin is a data ingestion tool by LinkedIn. At one point in time, LinkedIn had 15 data ingestion pipelines running which created several data management challenges. To tackle this problem, LinkedIn wrote Gobblin in-house. Gobblin Enters Apache Incubation | LinkedIn Engineering","title":"Challenges:"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#use-cases","text":"","title":"Use cases:"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#moving-big-data-into-hadoop","text":"Big Data from IoT devices, social apps, treams through data pipelines, moves into the most popular distributed data processing framework Hadoop for analysis & stuff. 15 IoT Big Data Examples You Should Know | Built In","title":"Moving Big Data Into Hadoop"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#streaming-data-from-databases-to-elasticsearch-server","text":"Java, String Boot & Elastic Search.","title":"Streaming Data from Databases to Elasticsearch Server"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#log-processing","text":"And logs are the only way to move back in time, track errors & study the behaviour of the system. Ingest logs to a central server: ELK Elastic LogStash Kibana stack","title":"Log Processing"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#stream-processing-engines-for-real-time-events","text":"Message queues like Kafka , Stream computation frameworks like Apache Storm, Apache Nifi, Apache Spark, Samza, Kinesis etc are used to implement the real-time large-scale data processing features in online applications. Netflix\u2019s real-time streaming platform","title":"Stream Processing Engines for Real-Time Events"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#data-pipelines","text":"Data pipeline facilitate the efficient flow of data from one point to another & also enable the developers to apply filters on the data streaming-in in real-time.","title":"Data pipelines"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#features","text":"These ensure smooth flow of data. Enables the business to apply filters and business logic on streaming data. Avert any bottlenecks & redundancy in the data flow. Facilitate parallel processing of data. Avoid data being corrupted. The entire flow of data extraction, transformation, combination, validation, converging of data from multiple streams into one etc. is completely automated.","title":"Features"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#extract-transform-loadetl","text":"Extract means fetching data from single or multiple data sources. Transform means transforming the extracted heterogeneous data into a standardized format based on the rules set by the business. Load means moving the transformed data to a data warehouse or another data storage location for further processing of data. ETL flow is done in batches, not real-time. Apache Flink , Storm , Spark , Kafka Migrating Batch ETL to Stream Processing: A Netflix Case Study with Kafka and Flink","title":"Extract Transform Load.(ETL)"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#distributed-data-processing","text":"Distributed data processing means diverging large amounts of data to several different nodes, running in a cluster, for parallel processing. Apache Zookeeper is a pretty popular, de-facto, node co-ordinator used in the industry. data-processing-distributed.jpeg Since the nodes are distributed and the tasks are executed parallelly, this makes the entire set-up pretty scalable & highly available . The workload can be scaled both horizontally & vertically. Data is made redundant & replicated across the cluster to avoid any sort of data loss.","title":"Distributed Data Processing"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#distributed-data-processing-technologies","text":"","title":"Distributed Data Processing Technologies"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#mapreduce--apache-hadoop","text":"MapReduce is a programming model written for managing distributed data processing across several different machines in a cluster, distributing tasks to several machines, running work in parallel, managing all the communication and data transfer within different parts of the system. The Map part of the programming model involves sorting the data based on a parameter and the Reduce part involves summarizing the sorted data. The most popular open-source implementation of the MapReduce programming model is Apache Hadoop . The framework is used by all big guns in the industry to manage massive amounts of data in their system. It is used by Twitter for running analytics. It is used by Facebook for storing big data.","title":"MapReduce \u2013 Apache Hadoop"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#apache-spark","text":"Apache Spark is an open-source cluster computing framework. It provides high performance for both batch & real-time in-stream processing. It can work with diverse data sources & facilitates parallel execution of work in a cluster. Spark has a cluster manager and distributed data storage. The cluster manager facilitates communication between different nodes running together in a cluster whereas the distributed storage facilitates storage of big data. Spark seamlessly integrates with distributed data stores like Cassandra, HDFS, MapReduce File System, Amazon S3 etc.","title":"Apache Spark"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#apache-storm","text":"Apache Storm is a distributed stream processing framework. In the industry, it is primarily used for processing massive amounts of streaming data . It has several different use cases such as real-time analytics, machine learning, distributed remote procedure calls etc.","title":"Apache Storm&#160;#"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#apache-kafka","text":"Apache Kafka is an open-source distributed stream processing & messaging platform . It\u2019s written using Java & Scala & was developed by LinkedIn . The storage layer of Kafka involves a distributed scalable pub/sub message queue . It helps read & write streams of data like a messaging system. Kafka is used in the industry to develop real-time features such as notification platforms, managing streams of massive amounts of data, monitoring website activity & metrics, messaging, log aggregation . Hadoop is preferred for batch processing of data whereas Spark, Kafka & *Storm are preferred for processing real-time streaming * data.","title":"Apache Kafka&#160;#"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#lambda-architecture","text":"data-architecture-lambda.jpeg Batch processing does take time considering the massive amount of data businesses have today but with it the accuracy of the approach is high & the results are comprehensive. real-time streaming data processing provides quick access to insights","title":"Lambda Architecture"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#typically-three-layers","text":"Batch Layer - deals with the results acquired via batch processing the data Speed Layer - gets data from the real-time streaming data processing Serving layer - combines the results obtained from both the Batch & the Speed layers","title":"Typically three layers"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#kappa-architecture","text":"data-architecture-kappa.jpeg In Kappa architecture, all the data flows through a single data streaming pipeline as opposed to the Lambda architecture which has different data streaming layers that converge into one.","title":"Kappa Architecture"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#two-layers","text":"Speed - streaming processing layer Serving Kappa is preferred if the batch and the streaming analytics results are fairly identical in a system. Lambda is preferred if they are not.","title":"Two Layers:"},{"location":"blog/web/web_application%26architecture/7.stream_processing/#limitations","text":"a distributed system does not promise Strong Consistency of data. Not trivial to set up and manage a distributed data processing system, years of work.","title":"Limitations"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/","text":"More architecture \u2693\ufe0e Event Driven Architecture \u2693\ufe0e reactive programming is a declarative programming paradigm concerned with data streams and the propagation of change reactive programming: a:= b+ c where a is automatically updated whenever b or c changes. In MVC, model changes will be reflected in an associated view. Gerrit Dashboard? What Is Blocking? \u2693\ufe0e blocking means the flow of execution is blocked waiting for a process to complete What Is Non-Blocking? \u2693\ufe0e The non-blocking approach facilitates IO Input-Output intensive operations. Besides the disk & other the hardware-based operations, communication and network operations also come under the IO operations. CPU intensive & *IO intensive * Non-blocking architecture is also known as the Reactive or the Event-driven architecture \u2693\ufe0e Technologies like NodeJS , frameworks in the Java ecosystem like Play , Akka.io are non-blocking in nature and are built for modern high IO scalable applications. They enable us to write code without worrying about handling multi-threads, thread lock, out of memory issues due to high IO etc. Node.js Real-time applications (chat, feeds) Event-driven architecture Can perform client-server duties (e.g. serve files), but not well-suited for this Database management, testing tools, etc, available as additional packages Play ! Client-server applications (website, services) Share-nothing architecture Can perform real-time duties (e.g. Websockets), but not well-suited for this Database management (including migrations!), testing tools, etc, built into core","title":"More architecture"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/#more-architecture","text":"","title":"More architecture"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/#event-driven-architecture","text":"reactive programming is a declarative programming paradigm concerned with data streams and the propagation of change reactive programming: a:= b+ c where a is automatically updated whenever b or c changes. In MVC, model changes will be reflected in an associated view. Gerrit Dashboard?","title":"Event Driven Architecture"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/#what-is-blocking","text":"blocking means the flow of execution is blocked waiting for a process to complete","title":"What Is Blocking?"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/#what-is-non-blocking","text":"The non-blocking approach facilitates IO Input-Output intensive operations. Besides the disk & other the hardware-based operations, communication and network operations also come under the IO operations. CPU intensive & *IO intensive *","title":"What Is Non-Blocking?"},{"location":"blog/web/web_application%26architecture/8.more%20architecture/#non-blocking-architecture-is-also-known-as-the-reactive-or-the-event-driven-architecture","text":"Technologies like NodeJS , frameworks in the Java ecosystem like Play , Akka.io are non-blocking in nature and are built for modern high IO scalable applications. They enable us to write code without worrying about handling multi-threads, thread lock, out of memory issues due to high IO etc. Node.js Real-time applications (chat, feeds) Event-driven architecture Can perform client-server duties (e.g. serve files), but not well-suited for this Database management, testing tools, etc, available as additional packages Play ! Client-server applications (website, services) Share-nothing architecture Can perform real-time duties (e.g. Websockets), but not well-suited for this Database management (including migrations!), testing tools, etc, built into core","title":"Non-blocking architecture is also known as the Reactive or the Event-driven architecture"},{"location":"tags/","text":"Tags \u2693\ufe0e","title":"Tags"},{"location":"tags/#tags","text":"","title":"Tags"}]}